<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-03-01T23:20:04+09:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">Dev Tripper</title><subtitle>Developer likes Trip
</subtitle><author><name>MiKy</name></author><entry><title type="html">DataEngineer 08 - RDBMS</title><link href="http://0.0.0.0:4000/dataengineer/RDBMS" rel="alternate" type="text/html" title="DataEngineer 08 - RDBMS" /><published>2020-02-29T18:24:00+09:00</published><updated>2020-02-29T18:24:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/RDBMS</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/RDBMS">&lt;h1 id=&quot;database&quot;&gt;Database&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Organized Collection of Data&lt;/li&gt;
  &lt;li&gt;보편적으로 RDB를 많이 사용함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rdb&quot;&gt;RDB&lt;/h2&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;Relational Database&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img01.png&quot; alt=&quot;Image&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RDB(Relational Database)
    &lt;ul&gt;
      &lt;li&gt;데이터를 표현하는 관계형 데이터 모델&lt;/li&gt;
      &lt;li&gt;2차원 테이블 형태로 데이터를 표현 eg. excel처럼 생각할 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RDBMS(Relational Database Management System)
    &lt;ul&gt;
      &lt;li&gt;관계형 데이터베이스를 생성 및 수정하는 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rdb-특징&quot;&gt;RDB 특징&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;모든 데이터를 2차원의 테이블로 표현
    &lt;ul&gt;
      &lt;li&gt;row와 column을 갖고 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;E-R(Entity-Relationship) 모델
    &lt;ul&gt;
      &lt;li&gt;상호관계가 있는 여러 테이블로 구성 : JOIN 등으로 상호관계 연결 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;aws-rds&quot;&gt;AWS RDS&lt;/h1&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;http://aws.amazon.com/&quot; target=&quot;_blank&quot;&gt;AWS&lt;/a&gt; &amp;gt; Console &amp;gt; Services &amp;gt; Database/RDS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img02.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;region-선택&quot;&gt;Region 선택&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;해당 지역에 생성되므로 데이터베이스 생성 전에 선택하자&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img03.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;200px&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-database&quot;&gt;Create Database&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/RDBMS/img04.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img04.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/RDBMS/img05.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img05.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/RDBMS/img06.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img06.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/RDBMS/img07.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img07.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/RDBMS/img08.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img08.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Method : Standard&lt;/li&gt;
  &lt;li&gt;Engine Type : MySQL 5.7.22 (현재 가장 stable한 버전, 19.11.22)&lt;/li&gt;
  &lt;li&gt;Templates : 사용 목적에 맞춰 선택
    &lt;ul&gt;
      &lt;li&gt;일반 프로젝트 사용 시 Production&lt;/li&gt;
      &lt;li&gt;우리는 연습용이니까 Free tier&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DB Instance Indetifier : DB 이름 지정&lt;/li&gt;
  &lt;li&gt;Credential Settings
    &lt;ul&gt;
      &lt;li&gt;Master Username/Password : 관리자 이름/비번 지정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DB Instance Size : 저장하려는 데이터의 양이 클 수록 크게 설정&lt;/li&gt;
  &lt;li&gt;Storage Type
    &lt;ul&gt;
      &lt;li&gt;General Purpose : 저장을 위한 목적으로 사용할 때&lt;/li&gt;
      &lt;li&gt;Provisioned IOPS(Input/Output Per Second) : 인/아웃풋 빠르게 엑세스할 수 있게 사용할 때. 속도 지정 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Storage Auto Scaling : 자동으로 크기 조정 가능 여부 설정&lt;/li&gt;
  &lt;li&gt;Multi-AZ deploymet : 다양한 국가에서 접속 시 균등한 성능을 사용할 수 있게 할 때 설정&lt;/li&gt;
  &lt;li&gt;Virtual Private Cloud(VPC)
    &lt;ul&gt;
      &lt;li&gt;클라우드 내 가상환경 설정&lt;/li&gt;
      &lt;li&gt;Security와도 연관되어 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Network &amp;amp; Security &amp;gt; Public Accessibility : YES로 설정해야 커맨드 접속 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;security-protocol-설정&quot;&gt;Security Protocol 설정&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img09.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img10.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img11.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Type : MYSQL/Aurora&lt;/li&gt;
  &lt;li&gt;Protocol : TCP&lt;/li&gt;
  &lt;li&gt;Port Range : 3306&lt;/li&gt;
  &lt;li&gt;Source : Anywhere → 0.0.0.0/0, ::/0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정보-확인&quot;&gt;정보 확인&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/RDBMS/img12.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Endpoint : fastcampus.c65nymnb37vh.ap-northeast-2.rds.amazonaws.com&lt;/li&gt;
  &lt;li&gt;Port : 3306&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="sql" /><category term="rdbms" /><summary type="html">Database Organized Collection of Data 보편적으로 RDB를 많이 사용함 RDB Relational Database RDB(Relational Database) 데이터를 표현하는 관계형 데이터 모델 2차원 테이블 형태로 데이터를 표현 eg. excel처럼 생각할 수 있다 RDBMS(Relational Database Management System) 관계형 데이터베이스를 생성 및 수정하는 시스템 RDB 특징 모든 데이터를 2차원의 테이블로 표현 row와 column을 갖고 있다 E-R(Entity-Relationship) 모델 상호관계가 있는 여러 테이블로 구성 : JOIN 등으로 상호관계 연결 가능 AWS RDS AWS &amp;gt; Console &amp;gt; Services &amp;gt; Database/RDS Region 선택 해당 지역에 생성되므로 데이터베이스 생성 전에 선택하자 Create Database Method : Standard Engine Type : MySQL 5.7.22 (현재 가장 stable한 버전, 19.11.22) Templates : 사용 목적에 맞춰 선택 일반 프로젝트 사용 시 Production 우리는 연습용이니까 Free tier DB Instance Indetifier : DB 이름 지정 Credential Settings Master Username/Password : 관리자 이름/비번 지정 DB Instance Size : 저장하려는 데이터의 양이 클 수록 크게 설정 Storage Type General Purpose : 저장을 위한 목적으로 사용할 때 Provisioned IOPS(Input/Output Per Second) : 인/아웃풋 빠르게 엑세스할 수 있게 사용할 때. 속도 지정 가능 Storage Auto Scaling : 자동으로 크기 조정 가능 여부 설정 Multi-AZ deploymet : 다양한 국가에서 접속 시 균등한 성능을 사용할 수 있게 할 때 설정 Virtual Private Cloud(VPC) 클라우드 내 가상환경 설정 Security와도 연관되어 있다 Network &amp;amp; Security &amp;gt; Public Accessibility : YES로 설정해야 커맨드 접속 가능 Security Protocol 설정 Type : MYSQL/Aurora Protocol : TCP Port Range : 3306 Source : Anywhere → 0.0.0.0/0, ::/0 정보 확인 Endpoint : fastcampus.c65nymnb37vh.ap-northeast-2.rds.amazonaws.com Port : 3306 REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 07 - SQL Data Types</title><link href="http://0.0.0.0:4000/dataengineer/SQLDataType" rel="alternate" type="text/html" title="DataEngineer 07 - SQL Data Types" /><published>2020-02-29T17:10:00+09:00</published><updated>2020-02-29T17:10:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/SQLDataType</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/SQLDataType">&lt;h1 id=&quot;sql-data-types&quot;&gt;SQL Data Types&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
    A{SQL Data Types}
    A--&amp;gt;B(Numeric)
    A--&amp;gt;C(Date/Time)
    A--&amp;gt;D(Character/String)
    A--&amp;gt;E(Unicode Character/String)
    A--&amp;gt;F(Binary)
    A--&amp;gt;G(Miscellaneous)
    A--&amp;gt;H(Boolean)
    B--&amp;gt;B1[bit, tinyint, smallint, int,&amp;lt;br/&amp;gt;bigint, decimal, numeric, float, real]
    C--&amp;gt;C1[Date, Time, Datetime, Timestamp, Year]
    D--&amp;gt;D1[&quot;Char, Varchar, Varchar(max), Text&quot;]
    E--&amp;gt;E1[&quot;NChar, NVarchar, NVarchar(max), NText&quot;]
    F--&amp;gt;F1[&quot;Binary, Varbinary, Varbinary(max), image&quot;]
    G--&amp;gt;G1[Clob, Blob, XML, JSON]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;sql-numeric-data-types&quot;&gt;SQL Numeric Data Types&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Data Type&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;From&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;To&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bit&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;tinyint&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;smallint&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-32,768&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32,767&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;int&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-2,147,483,648&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-2,147,483,647&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;bigint&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-9,223,372,036,854,775,808&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;9,223,372,036,854,775,807&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;decimal&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-10^38+1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10^38-1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;numeric&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-10^38+1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10^38-1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;float&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-1.79E + 308&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.79E + 308&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;real&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-3.40E + 38&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.40E + 38&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sql-date-and-time-data-types&quot;&gt;SQL Date and Time Data Types&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Data Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DATE&lt;/td&gt;
      &lt;td&gt;Stores date in the format &lt;strong&gt;YYYY-MM-DD&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TIME&lt;/td&gt;
      &lt;td&gt;Stores time in the format &lt;strong&gt;HH:MI:SS&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DATETIME&lt;/td&gt;
      &lt;td&gt;Stores date and time information in the format &lt;strong&gt;YYYY-MM-DD HH:MI:SS&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TIMESTAMP&lt;/td&gt;
      &lt;td&gt;Stores number of seconds passed since the Unix epoch &lt;strong&gt;(‘1971-01-01 00:00:00’ UTC)&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;YEAR&lt;/td&gt;
      &lt;td&gt;Stores year in 2 digit or 4 digit format.&lt;br /&gt;Range 1901 to 2155 in 4-digit format.&lt;br /&gt;Range 70 to 69, representing 1970 to 2069.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sql-character-and-string-data-types&quot;&gt;SQL Character and String Data Types&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;데이터 타입 및 길이는 데이터베이스마다 조금씩 다르므로 사용 시 각각 확인 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Data Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CHAR&lt;/td&gt;
      &lt;td&gt;Fixed length with maximum length of 8,000 characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;VARCHAR&lt;/td&gt;
      &lt;td&gt;Variable length storage with maximum length of 8,000 characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;VARCHAR(max)&lt;/td&gt;
      &lt;td&gt;Variable length storage with provided max characters, not supported in MySQL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;TEXT&lt;/td&gt;
      &lt;td&gt;Variable length storage with maximum size of 2GB data&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;sql-unicode-character-and-string-data-types&quot;&gt;SQL Unicode Character and String Data Types&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Data Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NCHAR&lt;/td&gt;
      &lt;td&gt;Fixed length with maximum length of 4,000 characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NVARCHAR&lt;/td&gt;
      &lt;td&gt;Variable length storage with maximum length of 4,000 characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NVARCHAR(max)&lt;/td&gt;
      &lt;td&gt;Variable length storage with provided max characters&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NTEXT&lt;/td&gt;
      &lt;td&gt;Variable length storage with maximum size of 1GB data&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;br /&gt;
&lt;a href=&quot;https://www.journaldev.com/16774/sql-data-types&quot; target=&quot;_blank&quot;&gt;SQL Data Types&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="sql" /><category term="datatypes" /><summary type="html">SQL Data Types graph LR A{SQL Data Types} A--&amp;gt;B(Numeric) A--&amp;gt;C(Date/Time) A--&amp;gt;D(Character/String) A--&amp;gt;E(Unicode Character/String) A--&amp;gt;F(Binary) A--&amp;gt;G(Miscellaneous) A--&amp;gt;H(Boolean) B--&amp;gt;B1[bit, tinyint, smallint, int,&amp;lt;br/&amp;gt;bigint, decimal, numeric, float, real] C--&amp;gt;C1[Date, Time, Datetime, Timestamp, Year] D--&amp;gt;D1[&quot;Char, Varchar, Varchar(max), Text&quot;] E--&amp;gt;E1[&quot;NChar, NVarchar, NVarchar(max), NText&quot;] F--&amp;gt;F1[&quot;Binary, Varbinary, Varbinary(max), image&quot;] G--&amp;gt;G1[Clob, Blob, XML, JSON] SQL Numeric Data Types Data Type From To bit 0 1 tinyint 0 255 smallint -32,768 32,767 int -2,147,483,648 -2,147,483,647 bigint -9,223,372,036,854,775,808 9,223,372,036,854,775,807 decimal -10^38+1 10^38-1 numeric -10^38+1 10^38-1 float -1.79E + 308 1.79E + 308 real -3.40E + 38 3.40E + 38 SQL Date and Time Data Types Data Type Description DATE Stores date in the format YYYY-MM-DD TIME Stores time in the format HH:MI:SS DATETIME Stores date and time information in the format YYYY-MM-DD HH:MI:SS TIMESTAMP Stores number of seconds passed since the Unix epoch (‘1971-01-01 00:00:00’ UTC) YEAR Stores year in 2 digit or 4 digit format.Range 1901 to 2155 in 4-digit format.Range 70 to 69, representing 1970 to 2069. SQL Character and String Data Types 데이터 타입 및 길이는 데이터베이스마다 조금씩 다르므로 사용 시 각각 확인 필요 Data Type Description CHAR Fixed length with maximum length of 8,000 characters VARCHAR Variable length storage with maximum length of 8,000 characters VARCHAR(max) Variable length storage with provided max characters, not supported in MySQL TEXT Variable length storage with maximum size of 2GB data SQL Unicode Character and String Data Types Data Type Description NCHAR Fixed length with maximum length of 4,000 characters NVARCHAR Variable length storage with maximum length of 4,000 characters NVARCHAR(max) Variable length storage with provided max characters NTEXT Variable length storage with maximum size of 1GB data REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사 SQL Data Types</summary></entry><entry><title type="html">Spotify 한국에서 가입하기</title><link href="http://0.0.0.0:4000/etc/SpotifySignUp" rel="alternate" type="text/html" title="Spotify 한국에서 가입하기" /><published>2020-02-25T18:27:00+09:00</published><updated>2020-02-25T18:27:00+09:00</updated><id>http://0.0.0.0:4000/etc/SpotifySignUp</id><content type="html" xml:base="http://0.0.0.0:4000/etc/SpotifySignUp">&lt;p&gt;데이터 공부 관련해서 Spotify API를 사용해야하는데, 한국은 가입이 안된단다. 이것 때문에 인강 진행이 안되고 막막했는데, VPN 우회 어쩌고가 생각이 났다.&lt;/p&gt;

&lt;h1 id=&quot;hotspot-shield&quot;&gt;Hotspot Shield&lt;/h1&gt;

&lt;p&gt;Chrome 앱스토어에 가서 확장 프로그램을 설치하자.&lt;br /&gt;
&lt;img src=&quot;/assets/images/etc/SpotifySignUp/img01.png&quot; alt=&quot;Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;브라우저 툴바의 오른쪽에서 프로그램을 실행시킨 후 ‘클릭해서 연결’ 한다.&lt;br /&gt;
&lt;em&gt;나는 잠시만 사용할 예정이라 일단 무료로 사용히겠다고 했다.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/etc/SpotifySignUp/img02.png&quot; alt=&quot;Image&quot; width=&quot;300px&quot; /&gt;
&lt;img src=&quot;/assets/images/etc/SpotifySignUp/img03.png&quot; alt=&quot;Image&quot; width=&quot;300px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 Spotify에 접속해서 가입을 하면 된다!!&lt;/p&gt;</content><author><name>MiKy</name></author><category term="ETC" /><category term="spotify" /><category term="signup" /><category term="hotspot" /><category term="shield" /><summary type="html">데이터 공부 관련해서 Spotify API를 사용해야하는데, 한국은 가입이 안된단다. 이것 때문에 인강 진행이 안되고 막막했는데, VPN 우회 어쩌고가 생각이 났다. Hotspot Shield Chrome 앱스토어에 가서 확장 프로그램을 설치하자. 브라우저 툴바의 오른쪽에서 프로그램을 실행시킨 후 ‘클릭해서 연결’ 한다. 나는 잠시만 사용할 예정이라 일단 무료로 사용히겠다고 했다. 이제 Spotify에 접속해서 가입을 하면 된다!!</summary></entry><entry><title type="html">DataEngineer 06 - Python for API</title><link href="http://0.0.0.0:4000/dataengineer/PythonForAPI" rel="alternate" type="text/html" title="DataEngineer 06 - Python for API" /><published>2020-02-25T03:56:00+09:00</published><updated>2020-02-25T03:56:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/PythonForAPI</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/PythonForAPI">&lt;h1 id=&quot;python-기본-구조&quot;&gt;Python 기본 구조&lt;/h1&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# python system 관련 패키지
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'main start'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 이 파일이 직접 실행되었을 때 수행되는 부분
# 근데 왜 __main__인 건데?? 이런 건 설명안해주네. ㅡㅡ;;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 모듈로 임포트 될 때 수행되는 부분 (확인용)
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'This script is being imported'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;⇓&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 spotify_api.py 
python start

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3
Python 3.7.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default, Mar 27 2019, 09:23:15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Clang 10.0.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;clang-1001.0.46.3&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; on darwin
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;copyright&quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&quot;credits&quot;&lt;/span&gt; or &lt;span class=&quot;s2&quot;&gt;&quot;license&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; import spotify_api
This script is being imported
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;sys&quot;&gt;sys&lt;/h1&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;System&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
  &lt;li&gt;기본 설치되어 있는 패키지&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sysexitarg&quot;&gt;sys.exit([&lt;em&gt;arg&lt;/em&gt;])&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://docs.python.org/3/library/sys.html#sys.exit&quot; target=&quot;_blank&quot;&gt;Python sys&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬 종료 함수&lt;/li&gt;
  &lt;li&gt;arg : 종료 상태를 의미하는 Integer(기본값=0) 또는 객체
    &lt;ul&gt;
      &lt;li&gt;0 : successful termination&lt;/li&gt;
      &lt;li&gt;0 이외의 숫자 (0–127) : abnormal termination
        &lt;ul&gt;
          &lt;li&gt;2 : 일반적으로 Unix에서 Command line syntax errors를 의미&lt;/li&gt;
          &lt;li&gt;1 : 나머지 모든 오류를 의미&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;requests-module&quot;&gt;Requests Module&lt;/h1&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;Python Library&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://requests.readthedocs.io/en/master/api/&quot; target=&quot;_blank&quot;&gt;Requests: HTTP for Humans &amp;gt; Deleoper Interface&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://httpbin.org/get'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;설치&quot;&gt;설치&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;python 2.X
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;python 3.X : 아래 명령어 중 가능한 방법으로 설치 진행
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;requests
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;requests &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;/h2&gt;

&lt;h3 id=&quot;request&quot;&gt;Request&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;method : GET, HEAD, POST, PUT, DELETE&lt;/li&gt;
  &lt;li&gt;url : Endpoint&lt;/li&gt;
  &lt;li&gt;**kwargs : 그외 다양한 파라미터 추가 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;head&quot;&gt;HEAD&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;get&quot;&gt;GET&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;post&quot;&gt;POST&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;data : (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the Request.&lt;/li&gt;
  &lt;li&gt;json : (optional) json data to send in the body of the Request.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;put&quot;&gt;PUT&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;patch&quot;&gt;PATCH&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;api-정보&quot;&gt;API 정보&lt;/h1&gt;

&lt;h2 id=&quot;authorization&quot;&gt;Authorization&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;DOC&lt;/strong&gt; &lt;a href=&quot;https://developer.spotify.com/documentation/general/guides/authorization-guide/&quot; target=&quot;_blank&quot;&gt;Client Credentials Flow&lt;/a&gt; : OAuth가 아니므로 Web API 부분 참고&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;You do : Login with your Client ID and Secret Key.&lt;/li&gt;
  &lt;li&gt;You get : Access token.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/PythonForAPI/img01.png&quot; alt=&quot;Image&quot; width=&quot;500px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;Client Credentials Flow&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;endpoints&quot;&gt;Endpoints&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;POST https://accounts.spotify.com/api/token&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;header-fields&quot;&gt;Header Fields&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Basic &amp;lt;base64 encoded client_id:client_secret&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Authorization&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Required&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Basic &amp;lt;base64 encoded client_id:client_secret&amp;gt;&lt;/code&gt; 형식으로 인코딩해서 전송 입력
        &lt;ul&gt;
          &lt;li&gt;base64 : string을 인코딩하는 방식
            &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# python 2.X
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Basic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# python 3.X
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Basic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UTF-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;body-parameter&quot;&gt;Body parameter&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;grant_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;client_credentials&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;application/x-www-form-urlencoded로 인코딩&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;grant_type&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Required&lt;/li&gt;
      &lt;li&gt;client_credentials로 설정 : OAuth 2.0에 따라 지정된 값&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;response&quot;&gt;Response&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response.text&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;return type : string&lt;/li&gt;
  &lt;li&gt;json으로 변환해서 사용 : &lt;code class=&quot;highlighter-rouge&quot;&gt;json.load(text)[key]&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;access_token&lt;/li&gt;
      &lt;li&gt;token_type&lt;/li&gt;
      &lt;li&gt;expires_in : 사용 가능 기한&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NgCXRKc...MzYjw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;search&quot;&gt;Search&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;DOC&lt;/strong&gt; &lt;a href=&quot;https://developer.spotify.com/documentation/web-api/reference/search/search/&quot;&gt;Search for an Item&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;endpoints-1&quot;&gt;Endpoints&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GET https://api.spotify.com/v1/search&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;request-parameters&quot;&gt;Request parameters&lt;/h3&gt;

&lt;h4 id=&quot;header-fields-1&quot;&gt;Header Fields&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bearer {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Authorization&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Required&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;query-parameters&quot;&gt;Query Parameters&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BTS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;limit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;5&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;q&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Required&lt;/li&gt;
      &lt;li&gt;Search &lt;a href=&quot;https://developer.spotify.com/documentation/web-api/reference/search/search/#writing-a-query---guidelines&quot;&gt;query&lt;/a&gt; keywords and optional field filters and operators.&lt;/li&gt;
      &lt;li&gt;eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;q=roadhouse%20blues&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Required&lt;/li&gt;
      &lt;li&gt;A comma-separated list of item types to search across.&lt;/li&gt;
      &lt;li&gt;Valid types : album , artist, playlist, track&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;market&lt;/strong&gt; : Optional. 지역&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;limit&lt;/strong&gt; : Optional. 결과 개수 설정&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;offset&lt;/strong&gt; : Optional. 데이터 호출 인덱스 설정&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;include_external&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Optional&lt;/li&gt;
      &lt;li&gt;Possible values: audio → 외부 음원 컨텐츠(?)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;api-호출&quot;&gt;API 호출&lt;/h1&gt;

&lt;h3 id=&quot;request-api&quot;&gt;Request API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;expires_in에 의해 토큰을 다시 요청하는 일 발생 가능&lt;/li&gt;
  &lt;li&gt;토큰 요청하는 기능을 별도 클래스로 분리해서 관리하는 것이 용이&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# http 통신
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# string을 인코딩하는 방식
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# log를 관리하는 패키지
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BTS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;limit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.spotify.com/v1/search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 코드 종료
&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;endpoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://accounts.spotify.com/api/token&quot;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# python 3.X &amp;gt;&amp;gt; encode(&quot;UTF-8&quot;)과 decode('ascii') 추가 설정 필요
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{}:{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'UTF-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Basic {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encoded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;grant_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;client_credentials&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 결과 &amp;gt; r.status_code(결과 상태), r.text(내용)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# temp for check
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# print('status:', r.status_code)
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# print('text:', r.text)
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# print('headers:', r.headers)
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# string -&amp;gt; json
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'access_token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# temp for check
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# print('access_token:', access_token)
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Bearer {}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;response-1&quot;&gt;Response&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;status : 200&lt;/li&gt;
  &lt;li&gt;response.text
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BQAggPn-ZRd435MxxQPbolUMoirC5UQyRMFIxgXM_Lfsv8_ORWhfnjqfodl8Kj0Kfb0R2giyi8kwJpWR5H0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;response.headers
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'date':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Tue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Feb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;GMT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'content-type':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'application/json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'set-cookie':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'__Host-device_id=AQBfw&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ewXqgYbuOw&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;srbJZJo&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;OVT&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;QVVKqNsHoZsqYfVVc&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hL&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;_-wJ-JZT&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Kld_sNIEZWVS&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;dN&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;spMKOEKtr&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;s;Version=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;Path=/;Max-Age=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2147483647&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;Secure;HttpOnly;SameSite=Lax'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'server':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'envoy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'x-envoy-upstream-service-time':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'strict-transport-security':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'max-age=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31536000&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'x-content-type-options':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'nosniff'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'vary':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Accept-Encoding'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'content-encoding':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'gzip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Via':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'HTTP/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;edgeproxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;google'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Alt-Svc':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'clear'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Transfer-Encoding':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'chunked'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;access_token : BQAyzteLRRLDMl9TAV5x3fYE5LArLLqNLEXksvhmULU_5raKEa8SFV0g9F-9x-3TknJN2cvzu4IIueaAJC8&lt;/li&gt;
  &lt;li&gt;headers
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Authorization':&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'Bearer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;BQAK&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Kt&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;-5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;scwVO&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;YyW_N&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;esnIHl&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ClRWMgQJmTOlAR&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;KqdIEy&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;WJS_TCGbPLi&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;VfEe&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;WI&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;jZ&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2e0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ssArM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;search result
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;artists&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.spotify.com/v1/search?query=BTS&amp;amp;type=artist&amp;amp;offset=0&amp;amp;limit=3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;items&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;external_urls&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;spotify&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;followers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16689729&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;genres&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;k-pop&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;k-pop boy group&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.spotify.com/v1/artists/3Nrfpe0tUJi4K4DXYWgMUX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3Nrfpe0tUJi4K4DXYWgMUX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;images&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/0c9057cb30520f9f883a220051260fc66a2f3ffa&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/34ee854082d0ea4d571e2ecf7f4aecea61270ad0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/156147697b696d4a6180e037dc1e2a33117d8d4a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;160&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BTS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;popularity&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spotify:artist:3Nrfpe0tUJi4K4DXYWgMUX&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;external_urls&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;spotify&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://open.spotify.com/artist/51sg5jUqKu2tkbmPlwPrNH&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;followers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;151868&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;genres&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.spotify.com/v1/artists/51sg5jUqKu2tkbmPlwPrNH&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;51sg5jUqKu2tkbmPlwPrNH&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;images&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BTS World&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;popularity&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spotify:artist:51sg5jUqKu2tkbmPlwPrNH&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;external_urls&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;spotify&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://open.spotify.com/artist/1Dx8CcTQA8bWYen7zXsNW0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;followers&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;112&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;genres&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.spotify.com/v1/artists/1Dx8CcTQA8bWYen7zXsNW0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1Dx8CcTQA8bWYen7zXsNW0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;images&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/14d24eb32432f44259c618716659c713508d89db&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;640&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/d03dff8d71073e3ec7e34f0bc6d0c6afa2db3996&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.scdn.co/image/f8e0646093672055d9ab6f1c766fb4203b18d39e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;BTSC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;popularity&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spotify:artist:1Dx8CcTQA8bWYen7zXsNW0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;limit&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;next&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.spotify.com/v1/search?query=BTS&amp;amp;type=artist&amp;amp;offset=3&amp;amp;limit=3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;previous&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;total&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;error-handling&quot;&gt;Error Handling&lt;/h2&gt;

&lt;h3 id=&quot;try-except&quot;&gt;try except&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.spotify.com/v1/search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;⇓ &lt;em&gt;client_id를 임의로 변경했을 경우의 결과&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 spotify_api.py 
Traceback &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;most recent call last&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
  File &lt;span class=&quot;s2&quot;&gt;&quot;spotify_api.py&quot;&lt;/span&gt;, line 76, &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;module&amp;gt;
    main&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;spotify_api.py&quot;&lt;/span&gt;, line 13, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;main
    headers &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; get_headers&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;client_id, client_secret&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  File &lt;span class=&quot;s2&quot;&gt;&quot;spotify_api.py&quot;&lt;/span&gt;, line 63, &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;get_headers
    access_token &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; json.loads&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;r.text&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
KeyError: &lt;span class=&quot;s1&quot;&gt;'access_token'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;status-code에-따라-상황-처리&quot;&gt;Status Code에 따라 상황 처리&lt;/h3&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.spotify.com/v1/search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 정상 완료되지 않았을 때
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# 오류 정보를 logging을 통해 띄운다
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;429&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 요청이 너무 많이 된 경우
&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# sporify의 경우 Rate Limiting(같은 endpoint로 너무 많이 접속한 경우)인 경우
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# -&amp;gt; header의 'Retry-After' 값(초 단위의 수)을 기다린 후 재시도 가능
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;retry_after&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Retry-After'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# 지정한 초 동안 멈춰있도록 설정
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# 기다린 후 API 호출 재시도
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.spotify.com/v1/search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# access_token is expired
&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.spotify.com/v1/search&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;## 알 수 없는 오류의 경우
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;## 위에서 오류만 남긴 처리를 끝으로 종료
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="python" /><category term="api" /><category term="spotify" /><summary type="html">Python 기본 구조 import sys # python system 관련 패키지 def main(): print('main start') # 이 파일이 직접 실행되었을 때 수행되는 부분 # 근데 왜 __main__인 건데?? 이런 건 설명안해주네. ㅡㅡ;; if __name__ == '__main__': main() # 모듈로 임포트 될 때 수행되는 부분 (확인용) else: print('This script is being imported') ⇓ $ python3 spotify_api.py python start $ python3 Python 3.7.3 (default, Mar 27 2019, 09:23:15) [Clang 10.0.1 (clang-1001.0.46.3)] on darwin Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information. &amp;gt;&amp;gt;&amp;gt; import spotify_api This script is being imported sys System 기본 설치되어 있는 패키지 sys.exit([arg]) REF Python sys 파이썬 종료 함수 arg : 종료 상태를 의미하는 Integer(기본값=0) 또는 객체 0 : successful termination 0 이외의 숫자 (0–127) : abnormal termination 2 : 일반적으로 Unix에서 Command line syntax errors를 의미 1 : 나머지 모든 오류를 의미 Requests Module Python Library REF Requests: HTTP for Humans &amp;gt; Deleoper Interface &amp;gt;&amp;gt;&amp;gt; import requests &amp;gt;&amp;gt;&amp;gt; req = requests.request('GET', 'https://httpbin.org/get') &amp;gt;&amp;gt;&amp;gt; req &amp;lt;Response [200]&amp;gt; 설치 python 2.X $ pip install requests python 3.X : 아래 명령어 중 가능한 방법으로 설치 진행 $ pip3 install requests $ pip3 install requests --user $ sudo pip3 install requests Syntax Request requests.request(method, url, **kwargs) method : GET, HEAD, POST, PUT, DELETE url : Endpoint **kwargs : 그외 다양한 파라미터 추가 가능 HEAD requests.head(url, **kwargs) GET requests.get(url, params=None, **kwargs) POST requests.post(url, data=None, json=None, **kwargs) data : (optional) Dictionary, list of tuples, bytes, or file-like object to send in the body of the Request. json : (optional) json data to send in the body of the Request. PUT requests.put(url, data=None, **kwargs) PATCH requests.patch(url, data=None, **kwargs) API 정보 Authorization DOC Client Credentials Flow : OAuth가 아니므로 Web API 부분 참고 You do : Login with your Client ID and Secret Key. You get : Access token. Client Credentials Flow Endpoints POST https://accounts.spotify.com/api/token Header Fields headers = { &quot;Authorization&quot;: &quot;Basic &amp;lt;base64 encoded client_id:client_secret&amp;gt;&quot; } Authorization Required Basic &amp;lt;base64 encoded client_id:client_secret&amp;gt; 형식으로 인코딩해서 전송 입력 base64 : string을 인코딩하는 방식 # python 2.X Basic base.b64encode(client_id:client_secret) # python 3.X Basic base.b64encode(client_id:client_secret.encode('UTF-8')).decode('ascii') Body parameter data = { &quot;grant_type&quot;: &quot;client_credentials&quot; } application/x-www-form-urlencoded로 인코딩 grant_type Required client_credentials로 설정 : OAuth 2.0에 따라 지정된 값 Response response.text return type : string json으로 변환해서 사용 : json.load(text)[key] access_token token_type expires_in : 사용 가능 기한 { &quot;access_token&quot;: &quot;NgCXRKc...MzYjw&quot;, &quot;token_type&quot;: &quot;Bearer&quot;, &quot;expires_in&quot;: 3600, } Search DOC Search for an Item Endpoints GET https://api.spotify.com/v1/search Request parameters Header Fields headers = { &quot;Authorization&quot;: &quot;Bearer {}&quot;.format(access_token) } Authorization Required Query Parameters params = { &quot;q&quot;: &quot;BTS&quot;, &quot;type&quot;: &quot;artist&quot;, &quot;limit&quot;: &quot;5&quot; } q Required Search query keywords and optional field filters and operators. eg. q=roadhouse%20blues type Required A comma-separated list of item types to search across. Valid types : album , artist, playlist, track market : Optional. 지역 limit : Optional. 결과 개수 설정 offset : Optional. 데이터 호출 인덱스 설정 include_external Optional Possible values: audio → 외부 음원 컨텐츠(?) API 호출 Request API expires_in에 의해 토큰을 다시 요청하는 일 발생 가능 토큰 요청하는 기능을 별도 클래스로 분리해서 관리하는 것이 용이 import sys import requests # http 통신 import base64 # string을 인코딩하는 방식 import json import logging # log를 관리하는 패키지 client_id = &quot;&quot; client_secret = &quot;&quot; def main(): headers = get_headers(client_id, client_secret) print(headers) params = { &quot;q&quot;: &quot;BTS&quot;, &quot;type&quot;: &quot;artist&quot;, &quot;limit&quot;: &quot;3&quot; } r = requests.get(&quot;https://api.spotify.com/v1/search&quot;, params=params, headers=headers) print(r.status_code) print(r.text) sys.exit(0) # 코드 종료 def get_headers(client_id, client_secret): endpoint = &quot;https://accounts.spotify.com/api/token&quot; # python 3.X &amp;gt;&amp;gt; encode(&quot;UTF-8&quot;)과 decode('ascii') 추가 설정 필요 encoded = base64.b64encode(&quot;{}:{}&quot;.format( client_id, client_secret).encode('UTF-8')).decode('ascii') headers = { &quot;Authorization&quot;: &quot;Basic {}&quot;.format(encoded) } payload = { &quot;grant_type&quot;: &quot;client_credentials&quot; } # 결과 &amp;gt; r.status_code(결과 상태), r.text(내용) r = requests.post(endpoint, data=payload, headers=headers) # temp for check # print('status:', r.status_code) # print('text:', r.text) # print('headers:', r.headers) # string -&amp;gt; json access_token = json.loads(r.text)['access_token'] # temp for check # print('access_token:', access_token) headers = { &quot;Authorization&quot;: &quot;Bearer {}&quot;.format(access_token) } return headers if __name__ == '__main__': main() Response status : 200 response.text { &quot;access_token&quot;:&quot;BQAggPn-ZRd435MxxQPbolUMoirC5UQyRMFIxgXM_Lfsv8_ORWhfnjqfodl8Kj0Kfb0R2giyi8kwJpWR5H0&quot;, &quot;token_type&quot;:&quot;Bearer&quot;, &quot;expires_in&quot;:3600, &quot;scope&quot;:&quot;&quot; } response.headers { 'date': 'Tue, 25 Feb 2020 10:43:03 GMT', 'content-type': 'application/json', 'set-cookie': '__Host-device_id=AQBfw4T9ewXqgYbuOw3srbJZJo7OVT6QVVKqNsHoZsqYfVVc46hL1_-wJ-JZT57do3A1Kld_sNIEZWVS87R8dN37spMKOEKtr0s;Version=1;Path=/;Max-Age=2147483647;Secure;HttpOnly;SameSite=Lax', 'server': 'envoy', 'x-envoy-upstream-service-time': '3', 'strict-transport-security': 'max-age=31536000', 'x-content-type-options': 'nosniff', 'vary': 'Accept-Encoding', 'content-encoding': 'gzip', 'Via': 'HTTP/2 edgeproxy, 1.1 google', 'Alt-Svc': 'clear', 'Transfer-Encoding': 'chunked' } access_token : BQAyzteLRRLDMl9TAV5x3fYE5LArLLqNLEXksvhmULU_5raKEa8SFV0g9F-9x-3TknJN2cvzu4IIueaAJC8 headers {'Authorization': 'Bearer BQAK8Kt-5scwVO7YyW_N16esnIHl4t8ClRWMgQJmTOlAR7KqdIEy8WJS_TCGbPLi6VfEe5WI7jZ2e0ssArM'} search result { &quot;artists&quot; : { &quot;href&quot; : &quot;https://api.spotify.com/v1/search?query=BTS&amp;amp;type=artist&amp;amp;offset=0&amp;amp;limit=3&quot;, &quot;items&quot; : [ { &quot;external_urls&quot; : { &quot;spotify&quot; : &quot;https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX&quot; }, &quot;followers&quot; : { &quot;href&quot; : null, &quot;total&quot; : 16689729 }, &quot;genres&quot; : [ &quot;k-pop&quot;, &quot;k-pop boy group&quot; ], &quot;href&quot; : &quot;https://api.spotify.com/v1/artists/3Nrfpe0tUJi4K4DXYWgMUX&quot;, &quot;id&quot; : &quot;3Nrfpe0tUJi4K4DXYWgMUX&quot;, &quot;images&quot; : [ { &quot;height&quot; : 640, &quot;url&quot; : &quot;https://i.scdn.co/image/0c9057cb30520f9f883a220051260fc66a2f3ffa&quot;, &quot;width&quot; : 640 }, { &quot;height&quot; : 320, &quot;url&quot; : &quot;https://i.scdn.co/image/34ee854082d0ea4d571e2ecf7f4aecea61270ad0&quot;, &quot;width&quot; : 320 }, { &quot;height&quot; : 160, &quot;url&quot; : &quot;https://i.scdn.co/image/156147697b696d4a6180e037dc1e2a33117d8d4a&quot;, &quot;width&quot; : 160 } ], &quot;name&quot; : &quot;BTS&quot;, &quot;popularity&quot; : 96, &quot;type&quot; : &quot;artist&quot;, &quot;uri&quot; : &quot;spotify:artist:3Nrfpe0tUJi4K4DXYWgMUX&quot; }, { &quot;external_urls&quot; : { &quot;spotify&quot; : &quot;https://open.spotify.com/artist/51sg5jUqKu2tkbmPlwPrNH&quot; }, &quot;followers&quot; : { &quot;href&quot; : null, &quot;total&quot; : 151868 }, &quot;genres&quot; : [ ], &quot;href&quot; : &quot;https://api.spotify.com/v1/artists/51sg5jUqKu2tkbmPlwPrNH&quot;, &quot;id&quot; : &quot;51sg5jUqKu2tkbmPlwPrNH&quot;, &quot;images&quot; : [ ], &quot;name&quot; : &quot;BTS World&quot;, &quot;popularity&quot; : 47, &quot;type&quot; : &quot;artist&quot;, &quot;uri&quot; : &quot;spotify:artist:51sg5jUqKu2tkbmPlwPrNH&quot; }, { &quot;external_urls&quot; : { &quot;spotify&quot; : &quot;https://open.spotify.com/artist/1Dx8CcTQA8bWYen7zXsNW0&quot; }, &quot;followers&quot; : { &quot;href&quot; : null, &quot;total&quot; : 112 }, &quot;genres&quot; : [ ], &quot;href&quot; : &quot;https://api.spotify.com/v1/artists/1Dx8CcTQA8bWYen7zXsNW0&quot;, &quot;id&quot; : &quot;1Dx8CcTQA8bWYen7zXsNW0&quot;, &quot;images&quot; : [ { &quot;height&quot; : 640, &quot;url&quot; : &quot;https://i.scdn.co/image/14d24eb32432f44259c618716659c713508d89db&quot;, &quot;width&quot; : 640 }, { &quot;height&quot; : 300, &quot;url&quot; : &quot;https://i.scdn.co/image/d03dff8d71073e3ec7e34f0bc6d0c6afa2db3996&quot;, &quot;width&quot; : 300 }, { &quot;height&quot; : 64, &quot;url&quot; : &quot;https://i.scdn.co/image/f8e0646093672055d9ab6f1c766fb4203b18d39e&quot;, &quot;width&quot; : 64 } ], &quot;name&quot; : &quot;BTSC&quot;, &quot;popularity&quot; : 32, &quot;type&quot; : &quot;artist&quot;, &quot;uri&quot; : &quot;spotify:artist:1Dx8CcTQA8bWYen7zXsNW0&quot; } ], &quot;limit&quot; : 3, &quot;next&quot; : &quot;https://api.spotify.com/v1/search?query=BTS&amp;amp;type=artist&amp;amp;offset=3&amp;amp;limit=3&quot;, &quot;offset&quot; : 0, &quot;previous&quot; : null, &quot;total&quot; : 40 } } Error Handling try except try: r = requests.get(&quot;https://api.spotify.com/v1/search&quot;, params=params, headers=headers) except: logging.error(r.text) sys.exit(1) ⇓ client_id를 임의로 변경했을 경우의 결과 $ python3 spotify_api.py Traceback (most recent call last): File &quot;spotify_api.py&quot;, line 76, in &amp;lt;module&amp;gt; main() File &quot;spotify_api.py&quot;, line 13, in main headers = get_headers(client_id, client_secret) File &quot;spotify_api.py&quot;, line 63, in get_headers access_token = json.loads(r.text)['access_token'] KeyError: 'access_token' Status Code에 따라 상황 처리 r = requests.get(&quot;https://api.spotify.com/v1/search&quot;, params=params, headers=headers) if r.status_code != 200: # 정상 완료되지 않았을 때 # 오류 정보를 logging을 통해 띄운다 logging.error(json.load(r.text)) if r.status_code == 429: # 요청이 너무 많이 된 경우 # sporify의 경우 Rate Limiting(같은 endpoint로 너무 많이 접속한 경우)인 경우 # -&amp;gt; header의 'Retry-After' 값(초 단위의 수)을 기다린 후 재시도 가능 retry_after = json.load(r.headers)['Retry-After'] # 지정한 초 동안 멈춰있도록 설정 time.sleep(int(retry_after)) # 기다린 후 API 호출 재시도 r = requests.get(&quot;https://api.spotify.com/v1/search&quot;, params=params, headers=headers) elif r.status_code == 401: # access_token is expired headers = get_headers(client_id, client_secret) r = requests.get(&quot;https://api.spotify.com/v1/search&quot;, params=params, headers=headers) else: ## 알 수 없는 오류의 경우 sys.exit(1) ## 위에서 오류만 남긴 처리를 끝으로 종료 REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 05 - API 기초</title><link href="http://0.0.0.0:4000/dataengineer/APIBase" rel="alternate" type="text/html" title="DataEngineer 05 - API 기초" /><published>2020-02-24T20:18:00+09:00</published><updated>2020-02-24T20:18:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/APIBase</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/APIBase">&lt;h1 id=&quot;rest-api&quot;&gt;REST API&lt;/h1&gt;

&lt;h2 id=&quot;api&quot;&gt;API&lt;/h2&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;Application Programing Interface&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
  &lt;li&gt;두 개의 시스템이 상호 작용하기 위한 인터페이스&lt;/li&gt;
  &lt;li&gt;데이터를 주고 받는 인터페이스&lt;/li&gt;
  &lt;li&gt;API라하면 보통 REST API를 지칭함&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;web-api&quot;&gt;WEB API&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/APIBase/img01.png&quot; alt=&quot;Image&quot; width=&quot;500px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;http 프로토콜을 사용하는 REST API 기반으로 구축한 웹사이트&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;api-접근-권한&quot;&gt;API 접근 권한&lt;/h1&gt;

&lt;h2 id=&quot;authentication-vs-authorization&quot;&gt;Authentication VS Authorization&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Authentication : Identity(정체)가 맞는지 자격 증명&lt;/li&gt;
  &lt;li&gt;Authorization: API를 통한 어떤 액션에 대한 권한 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;api-key&quot;&gt;API Key&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;API 호출할 때 Request URL 또는 Request 헤더에 포함시키는 긴 스트링&lt;/li&gt;
  &lt;li&gt;API Key가 없으면 API의 사용이 불가능&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;URL 방식
    &lt;ul&gt;
      &lt;li&gt;Request URL에 Key String을 포함시켜 호출&lt;/li&gt;
      &lt;li&gt;eg. 구글맵 → https://maps.googleapis.com/maps/api/directions/json?origin=Disneyland&amp;amp;destination=Universal+Studios +Hollywood&amp;amp;key=&lt;strong class=&quot;font-blue&quot;&gt;YOUR_API_KEY&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Header 방식 : BasicAuth
    &lt;ul&gt;
      &lt;li&gt;username:password와 같은 credential을 base64로 인코딩해서 Request Header에 포함시켜 호출&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;oauth-20&quot;&gt;OAuth 2.0&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;페이스북이나 구글 계정으로 인증하는 방식 등의 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
    A--&amp;gt;B
    B--&amp;gt;A
    B--WEB API--&amp;gt;C
    C--&amp;gt;B
    subgraph SERVER
    C[Sportify]
    end
    subgraph CLIENT
    B[FaceBook&amp;lt;br/&amp;gt;Google&amp;lt;br/&amp;gt;etc]
    end
    subgraph RESOURCE
    A[End user&amp;lt;br/&amp;gt;data and controls]
    end
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;api-구조&quot;&gt;API 구조&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/APIBase/img02.png&quot; alt=&quot;Image&quot; width=&quot;340px&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;endpoint&quot;&gt;Endpoint&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;API를 요청하는 포인트의 값&lt;/li&gt;
  &lt;li&gt;Resource를 Access하는 경로/방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자원 접근에 허용된 범위&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Method&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;GET&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SELECT&lt;/td&gt;
      &lt;td&gt;해당 리소스를 조회하고 정보를 가져온다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HEAD&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SELECT&lt;/td&gt;
      &lt;td&gt;GET 방식과 동일. 단, 응답코드와 HEAD만 가져온다 → API 작동 여부 확인용&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;POST&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;INSERT&lt;/td&gt;
      &lt;td&gt;요청된 리소스를 생성한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PUT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;UPDATE&lt;/td&gt;
      &lt;td&gt;요청된 리소스를 업데이트한다&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DELETE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DELETE&lt;/td&gt;
      &lt;td&gt;요청된 리소스를 삭제한다&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;parameter&quot;&gt;Parameter&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Endpoint를 통해 Request할 때 함께 전달하는 값&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Type&lt;/th&gt;
      &lt;th&gt;내용&lt;/th&gt;
      &lt;th&gt;예&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Header&lt;/td&gt;
      &lt;td&gt;주로 Authorization 관련 정보 전달&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Path&lt;/td&gt;
      &lt;td&gt;Query String(?, 물음표) 이전 Endpoint path 안에 포함되는 변수&lt;/td&gt;
      &lt;td&gt;{id}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Query String&lt;/td&gt;
      &lt;td&gt;Query String(?, 물음표) 이후 포함되는 변수&lt;/td&gt;
      &lt;td&gt;?country=SE&amp;amp;city=seoul&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Request Body&lt;/td&gt;
      &lt;td&gt;주로 JSON 형태로 전달되며 POST method에 주로 사용&lt;/td&gt;
      &lt;td&gt;{cuntry:’SE’, city:’seoul’}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;response-status-codes&quot;&gt;Response Status Codes&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Web API uses the following response status codes, as defined in the &lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt; and &lt;a href=&quot;https://www.ietf.org/rfc/rfc6585.txt&quot;&gt;RFC 6585&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;2XX : 정상 작동&lt;/li&gt;
      &lt;li&gt;4XX ~ 5XX : 오류 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/APIBase/img07.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;spotify-api&quot;&gt;Spotify API&lt;/h1&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.spotify.com/documentation/web-api/&quot; target=&quot;_blank&quot;&gt;Spotify Web API&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://0.0.0.0:4000/etc/SpotifySignUp&quot; target=&quot;_blank&quot;&gt;Spotify 한국에서 가입하기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;api-doc&quot;&gt;API Doc&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Rate Limiting&lt;/li&gt;
  &lt;li&gt;Response Status Code&lt;/li&gt;
  &lt;li&gt;API ENDPOINT REFERENCE
    &lt;ul&gt;
      &lt;li&gt;세부 API 정보 확인 가능&lt;/li&gt;
      &lt;li&gt;eg. get an artist, get an artist’s top tracks, etc&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/APIBase/img03.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;400px&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;api-app--계정-생성&quot;&gt;API App &amp;amp; 계정 생성&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.spotify.com/dashboard/&quot; target=&quot;_blank&quot;&gt;Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;CREATE AN APP으로 신규 앱 생성&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/APIBase/img04.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정보 입력&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/APIBase/img05.png&quot; alt=&quot;Image&quot; width=&quot;200px&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Client ID &amp;amp; Client Secret 확인&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/APIBase/img06.png&quot; alt=&quot;Image&quot; width=&quot;400px&quot; /&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Client ID : e351e56f4cc04714976ce9d82b22f18d&lt;/li&gt;
      &lt;li&gt;Client Secret : a8910dc7bd9b4753b02905a7fc84fc6c&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="api" /><summary type="html">REST API API Application Programing Interface 두 개의 시스템이 상호 작용하기 위한 인터페이스 데이터를 주고 받는 인터페이스 API라하면 보통 REST API를 지칭함 WEB API http 프로토콜을 사용하는 REST API 기반으로 구축한 웹사이트 API 접근 권한 Authentication VS Authorization Authentication : Identity(정체)가 맞는지 자격 증명 Authorization: API를 통한 어떤 액션에 대한 권한 설정 API Key API 호출할 때 Request URL 또는 Request 헤더에 포함시키는 긴 스트링 API Key가 없으면 API의 사용이 불가능 URL 방식 Request URL에 Key String을 포함시켜 호출 eg. 구글맵 → https://maps.googleapis.com/maps/api/directions/json?origin=Disneyland&amp;amp;destination=Universal+Studios +Hollywood&amp;amp;key=YOUR_API_KEY Header 방식 : BasicAuth username:password와 같은 credential을 base64로 인코딩해서 Request Header에 포함시켜 호출 OAuth 2.0 페이스북이나 구글 계정으로 인증하는 방식 등의 경우 graph LR A--&amp;gt;B B--&amp;gt;A B--WEB API--&amp;gt;C C--&amp;gt;B subgraph SERVER C[Sportify] end subgraph CLIENT B[FaceBook&amp;lt;br/&amp;gt;Google&amp;lt;br/&amp;gt;etc] end subgraph RESOURCE A[End user&amp;lt;br/&amp;gt;data and controls] end API 구조 Endpoint API를 요청하는 포인트의 값 Resource를 Access하는 경로/방법 Method 자원 접근에 허용된 범위 Method Type 내용 GET SELECT 해당 리소스를 조회하고 정보를 가져온다 HEAD SELECT GET 방식과 동일. 단, 응답코드와 HEAD만 가져온다 → API 작동 여부 확인용 POST INSERT 요청된 리소스를 생성한다 PUT UPDATE 요청된 리소스를 업데이트한다 DELETE DELETE 요청된 리소스를 삭제한다 Parameter Endpoint를 통해 Request할 때 함께 전달하는 값 Type 내용 예 Header 주로 Authorization 관련 정보 전달   Path Query String(?, 물음표) 이전 Endpoint path 안에 포함되는 변수 {id} Query String Query String(?, 물음표) 이후 포함되는 변수 ?country=SE&amp;amp;city=seoul Request Body 주로 JSON 형태로 전달되며 POST method에 주로 사용 {cuntry:’SE’, city:’seoul’} Response Status Codes Web API uses the following response status codes, as defined in the RFC 2616 and RFC 6585 2XX : 정상 작동 4XX ~ 5XX : 오류 발생 Spotify API REF Spotify Web API Spotify 한국에서 가입하기 API Doc Rate Limiting Response Status Code API ENDPOINT REFERENCE 세부 API 정보 확인 가능 eg. get an artist, get an artist’s top tracks, etc API App &amp;amp; 계정 생성 Dashboard CREATE AN APP으로 신규 앱 생성 정보 입력 Client ID &amp;amp; Client Secret 확인 Client ID : e351e56f4cc04714976ce9d82b22f18d Client Secret : a8910dc7bd9b4753b02905a7fc84fc6c REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 04 - SQL 기초</title><link href="http://0.0.0.0:4000/dataengineer/SQLBase" rel="alternate" type="text/html" title="DataEngineer 04 - SQL 기초" /><published>2020-02-24T18:05:00+09:00</published><updated>2020-02-24T18:05:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/SQLBase</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/SQLBase">&lt;h1 id=&quot;sql-query&quot;&gt;SQL query&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;RDBM의 종류에 따라 구문이 조금씩 다르지만 기본 원리는 동일&lt;/li&gt;
  &lt;li&gt;SQLite로 진행&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;data&quot;&gt;Data&lt;/h2&gt;

&lt;h3 id=&quot;select&quot;&gt;SELECT&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;ASC/DESC : 정렬 순서&lt;/li&gt;
  &lt;li&gt;ORDER BY : 정렬 대상&lt;/li&gt;
  &lt;li&gt;GROUP BY : 그룹으로 묶어서 데이터 선택&lt;/li&gt;
  &lt;li&gt;LIMIT : 출력 개수 제한&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;insert&quot;&gt;INSERT&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;update&quot;&gt;UPDATE&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럽&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;값&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;replace&quot;&gt;REPLACE&lt;/h3&gt;
&lt;p&gt;: 있으면 바꾸고, 없으면 추가&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;insert-or-ignore&quot;&gt;INSERT OR IGNORE&lt;/h3&gt;
&lt;p&gt;: 중복이 없을 때만 실행하고 있으면 종료 cf. MySQL : INSERT IGNORE&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IGNORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;delete&quot;&gt;DELETE&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;join&quot;&gt;JOIN&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/SQLBase/img01.png&quot; alt=&quot;Image&quot; /&gt;&lt;br /&gt;
&lt;em&gt;출처 : https://commons.wikimedia.org/wiki/File:SQL_Joins.svg&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;table&quot;&gt;Table&lt;/h2&gt;

&lt;h3 id=&quot;create&quot;&gt;CREATE&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터타입&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;alter&quot;&gt;ALTER&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RENAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;새테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ADD&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COLUMN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터타입&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;drop&quot;&gt;DROP&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;function&quot;&gt;Function&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;SUBSTR(컬럼, 시작 인덱스, 끝 인덱스) : 컬럼을 호출할 때 문자열의 일부만 가져오도록 선택&lt;/li&gt;
  &lt;li&gt;UPPER/LOWER : 대문자/소문자로 변환&lt;/li&gt;
  &lt;li&gt;LENGTH : 문자열 길이&lt;/li&gt;
  &lt;li&gt;MAX/MIN : 최대/최소값&lt;/li&gt;
  &lt;li&gt;AVG, COUNT, SUM&lt;/li&gt;
  &lt;li&gt;DATE : 세부 syntax는 database별 상이
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2020-02-24'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'NOW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2020-02-24'&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2020-02-24 20:00:00'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'NOW'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2020-02-24 20:00:00'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;DATETIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'+1 DAY'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2020-02-25 20:00:00'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;CASE WHEN
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;출력용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="sql" /><category term="sqllite" /><summary type="html">SQL query RDBM의 종류에 따라 구문이 조금씩 다르지만 기본 원리는 동일 SQLite로 진행 Data SELECT SELECT 컬럼 FROM 테이블 WHERE 조건; ASC/DESC : 정렬 순서 ORDER BY : 정렬 대상 GROUP BY : 그룹으로 묶어서 데이터 선택 LIMIT : 출력 개수 제한 INSERT INSERT INTO 테이블 (컬럼, ...) VALUES(값, ...) UPDATE UPDATE SET 컬럽=값 WHERE 조건 REPLACE : 있으면 바꾸고, 없으면 추가 REPLACE INTO 테이블 (컬럼, ...) VALUES(값, ...) INSERT OR IGNORE : 중복이 없을 때만 실행하고 있으면 종료 cf. MySQL : INSERT IGNORE INSERT OR IGNORE INTO 테이블 (컬럼, ...) VALUES(값, ...) DELETE DELETE FROM 테이블 WHERE 조건 JOIN 출처 : https://commons.wikimedia.org/wiki/File:SQL_Joins.svg Table CREATE CREATE TABLE 테이블 (컬럼 데이터타입, ...) ALTER ALTER TABLE 테이블 RENAME TO 새테이블명; ALTER TABLE 테이블 ADD COLUMN 컬럼명 데이터타입; DROP DROP TABLE 테이블 Function SUBSTR(컬럼, 시작 인덱스, 끝 인덱스) : 컬럼을 호출할 때 문자열의 일부만 가져오도록 선택 UPPER/LOWER : 대문자/소문자로 변환 LENGTH : 문자열 길이 MAX/MIN : 최대/최소값 AVG, COUNT, SUM DATE : 세부 syntax는 database별 상이 SELECT DATE(CURRENT_TIMESTAMP) &amp;gt;&amp;gt; '2020-02-24' SELECT DATE('NOW') &amp;gt;&amp;gt; '2020-02-24' SELECT CURRENT_TIMESTAMP &amp;gt;&amp;gt; '2020-02-24 20:00:00' SELECT DATETIME('NOW') &amp;gt;&amp;gt; '2020-02-24 20:00:00' SELECT DATETIME(CURRENT_TIMESTAMP, '+1 DAY') &amp;gt;&amp;gt; '2020-02-25 20:00:00' CASE WHEN SELECT 컬럼, ... CASE WHEN 조건 THEN 결과 WHEN 조건 THEN 결과 ELSE 결과 END AS 출력용 컬럼명, FROM 테이블  REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 03 - AWS 기초</title><link href="http://0.0.0.0:4000/dataengineer/AwsBase" rel="alternate" type="text/html" title="DataEngineer 03 - AWS 기초" /><published>2020-02-23T02:18:00+09:00</published><updated>2020-02-23T02:18:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/AwsBase</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/AwsBase">&lt;h1 id=&quot;amazon-cloud&quot;&gt;Amazon Cloud&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/&quot; target=&quot;_blank&quot;&gt;Amazon console&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;service-개요&quot;&gt;Service 개요&lt;/h2&gt;

&lt;h3 id=&quot;compute&quot;&gt;Compute&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;EC2
    &lt;ul&gt;
      &lt;li&gt;Service &amp;gt; Compute &amp;gt; EC2&lt;/li&gt;
      &lt;li&gt;가상 클라우드 서버&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Lambda : Serverless&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;storage&quot;&gt;Storage&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;S3 : 데이터 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;database&quot;&gt;Database&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;RDS : MySQL, Postgre 등&lt;/li&gt;
  &lt;li&gt;DynamoDB : NoSQL&lt;/li&gt;
  &lt;li&gt;Amazon RedShift&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;networking--content-delivery&quot;&gt;Networking &amp;amp; Content Delivery&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;API Gateway : 우리의 API를 만들 예정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;management--governance&quot;&gt;Management &amp;amp; Governance&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;CloudWatch : 다양한 로그를 통해 에러 해결, 퍼포먼스 모니터링 등에 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;analytics&quot;&gt;Analytics&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Athena : Presto 기반의 서비스로 우리가 사용할 예정&lt;/li&gt;
  &lt;li&gt;Kinesis : 데이터를 프로세싱&lt;/li&gt;
  &lt;li&gt;Data Pipeline&lt;/li&gt;
  &lt;li&gt;AWS Glue&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;security-identity--compliance&quot;&gt;Security, Identity, &amp;amp; Compliance&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;IAM
    &lt;ul&gt;
      &lt;li&gt;User, Permission 관리 서비스&lt;/li&gt;
      &lt;li&gt;웹에 접속하지 않고 로컬에서 Console과 통신&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;iam&quot;&gt;IAM&lt;/h2&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;Identity and Access Management&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img02.png&quot; alt=&quot;Image&quot; width=&quot;400px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;User, Group, Role 등 관리&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;add-user&quot;&gt;Add User&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img03.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img03.png&quot; alt=&quot;Image&quot; width=&quot;400px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;User name&lt;/li&gt;
  &lt;li&gt;Access type
    &lt;ul&gt;
      &lt;li&gt;Programmatic access [✔] → CLI 사용을 위해 선택&lt;br /&gt;
Enables an access key ID and secret access key for the AWS API, &lt;strong&gt;&lt;u&gt;CLI&lt;/u&gt;&lt;/strong&gt;, SDK, and other development tools.&lt;/li&gt;
      &lt;li&gt;AWS Management Console access&lt;br /&gt;
Enables a password that allows users to sign-in to the AWS Management Console.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;set-permissions&quot;&gt;Set permissions&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img04.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img04.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img05.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img05.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add user to group : User를 그룹으로 관리 가능. 지금은 그룹없이 진행&lt;/li&gt;
  &lt;li&gt;Copy permissions from existing user : 기존 유저의 권한 설정을 복사해서 권한 부여 eg. full permissions&lt;/li&gt;
  &lt;li&gt;Attach existing policies directly : 부여할 권한 선택
    &lt;ul&gt;
      &lt;li&gt;AdministratorAcess [✔] : 전체 권한을 갖도록 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;add-tags-optional&quot;&gt;Add tags (Optional)&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img06.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img06.png&quot; alt=&quot;Image&quot; width=&quot;400px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;지금은 패스&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;user-review&quot;&gt;User review&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img07.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img07.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;
&lt;a href=&quot;/assets/images/dataengineer/AwsBase/img08.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img08.png&quot; alt=&quot;Image&quot; width=&quot;360px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;success&quot;&gt;Success&lt;br /&gt;
You successfully created the users shown below. You can view and download user security credentials. You can also email users instructions for signing in to the AWS Management Console. This is the last time these credentials will be available to download. However, you can create new credentials at any time.
Users with AWS Management Console access can sign-in at: &lt;a href=&quot;https://950825810068.signin.aws.amazon.com/console&quot; target=&quot;_blank&quot;&gt;https://950825810068.signin.aws.amazon.com/console&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;aws-command-line-interface-cli&quot;&gt;AWS Command Line Interface (CLI)&lt;/h1&gt;

&lt;h2 id=&quot;aws-cli-설치&quot;&gt;AWS CLI 설치&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/AwsBase/img01.png&quot; alt=&quot;Image&quot; class=&quot;border&quot; width=&quot;500px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;&lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/install-macos.html&quot; target=&quot;_blank&quot;&gt;Amazon CLI Install&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;CHECK&lt;/strong&gt;&lt;br /&gt;
AWS CLI는 두 가지 버전으로 제공됩니다.&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;버전 1.x – 일반적으로 사용 가능한 AWS CLI 버전이며 프로덕션 환경에서 사용하기에 더 적합합니다.&lt;/li&gt;
    &lt;li&gt;버전 2.x – 테스트 및 평가용으로 사용되는 AWS CLI의 미리 보기 버전입니다. 이 버전에는 스크립트가 예상대로 계속 작동하도록 스크립트를 변경해야 할 수 있는 “주요” 변경 사항이 포함되어 있습니다. 버전 2의 새로운 기능 및 주요 변경 사항 목록은 &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cliv2-migration.html&quot;&gt;호환성에 영향을 미치는 변경 – AWS CLI 버전 1에서 버전 2로 마이그레이션&lt;/a&gt; 단원을 참조하십시오.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;⇒ 강의에 나온대로 버전 1로 진행&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;사전-준비&quot;&gt;사전 준비&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Python 2.7, Python 3.4 또는 이후 버전 필수 (이전 버전의 파인썬 지원 중단 2020.01.10)
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Python 3.7.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;pip3 설치 확인 : Python 3.7 설치 시 자동 설치된다고 함
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
pip 19.0.3 from /usr/local/lib/python3.7/site-packages/pip &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;python 3.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;번들 설치 관리자는 공백을 포함하는 경로에 설치하는 것을 미지원 → 공백이 없도록 경로 정리할 것!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;설치하기&quot;&gt;설치하기&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;번들 설치 관리자를 사용 / pip를 사용 설치 방법 중 선택&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pip로-설치&quot;&gt;PIP로 설치&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/install-macos.html#awscli-install-osx-pip&quot;&gt;pip를 사용하여 macOS에 AWS CLI 버전 1 설치&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;awscli &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;pip-설치-오류&quot;&gt;PIP 설치 오류&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://travelc.tistory.com/28&quot;&gt;pip SSL 관련 오류 해결 방법&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://judynewyork.tistory.com/433&quot;&gt;openssl 재설치&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;오류
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;awscli &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
...
Could not fetch URL https://pypi.org/simple/awscli/: There was a problem confirming the ssl certificate: HTTPSConnectionPool&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pypi.org'&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;443&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Max retries exceeded with url: /simple/awscli/ &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Caused by SSLError&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Can't connect to HTTPS URL because the SSL module is not available.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; - skipping
Could not find a version that satisfies the requirement awscli &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from versions: &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
No matching distribution found &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;awscli
pip is configured with locations that require TLS/SSL, however the ssl module &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Python is not available.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;해결 시도
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://github.com/pypa/pip/issues/4205&quot;&gt;&lt;del&gt;SSL: CERTIFICATE_VERIFY_FAILED with Python 3.6.0&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;ssl 재설치 시도했으나 해결되지 않았다
        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openssl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;결국 이렇게 설치에 성공하는 듯 했으나 aws가 실제로 설치가 되지 않아 not found command란다
        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip &lt;span class=&quot;nt&quot;&gt;--trusted-host&lt;/span&gt; pypi.org &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;awscli &lt;span class=&quot;nt&quot;&gt;--upgrade&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt;
Collecting awscli
Downloading https://files.pythonhosted.org/packages/3f/32/2914f9bdd89429db51050760698af77021ba3bd52261fe8714de628c3691/awscli-1.18.5-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.9MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 |████████████████████████████████| 2.9MB 577kB/s 
Collecting rsa&amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.5.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.1.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Downloading https://files.pythonhosted.org/packages/e1/ae/baedc9cb175552e95f3395c43055a6a5e125ae4d48a1d7a924baca83e92e/rsa-3.4.2-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;46kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 |████████████████████████████████| 51kB 7.5MB/s 
Requirement already satisfied, skipping upgrade: colorama&amp;lt;0.4.4,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.2.5&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; python_version &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3.4&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.4.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Collecting &lt;span class=&quot;nv&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.15.5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Downloading https://files.pythonhosted.org/packages/40/2b/f290e79241a6b07ab955a65d0395128bb300711ef37589a01696de1c5b5f/botocore-1.15.5-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.9MB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 |████████████████████████████████| 5.9MB 384kB/s 
Requirement already satisfied, skipping upgrade: PyYAML&amp;lt;5.3,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.10 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5.1.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Requirement already satisfied, skipping upgrade: docutils&amp;lt;0.16,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.10 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.15.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Collecting s3transfer&amp;lt;0.4.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.3.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Downloading https://files.pythonhosted.org/packages/69/79/e6afb3d8b0b4e96cefbdc690f741d7dd24547ff1f94240c997a26fa908d3/s3transfer-0.3.3-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;69kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 |████████████████████████████████| 71kB 495kB/s 
Collecting pyasn1&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.1.3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from rsa&amp;lt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.5.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3.1.2-&amp;gt;awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Downloading https://files.pythonhosted.org/packages/62/1e/a94a8d635fa3ce4cfc7f506003548d0a2447ae76fd5ca53932970fe3053f/pyasn1-0.4.8-py2.py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;77kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 |████████████████████████████████| 81kB 290kB/s 
Requirement already satisfied, skipping upgrade: urllib3&amp;lt;1.26,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.20&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; python_version &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3.4&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from &lt;span class=&quot;nv&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.15.5-&amp;gt;awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.24.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Collecting jmespath&amp;lt;1.0.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.7.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from &lt;span class=&quot;nv&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.15.5-&amp;gt;awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Downloading https://files.pythonhosted.org/packages/83/94/7179c3832a6d45b266ddb2aac329e101367fbdb11f425f13771d27f225bb/jmespath-0.9.4-py2.py3-none-any.whl
Requirement already satisfied, skipping upgrade: python-dateutil&amp;lt;3.0.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.1 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from &lt;span class=&quot;nv&quot;&gt;botocore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.15.5-&amp;gt;awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.8.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Requirement already satisfied, skipping upgrade: six&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.5 &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /opt/anaconda3/lib/python3.7/site-packages &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;from python-dateutil&amp;lt;3.0.0,&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.1-&amp;gt;botocore&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;1.15.5-&amp;gt;awscli&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1.12.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Installing collected packages: pyasn1, rsa, jmespath, botocore, s3transfer, awscli
WARNING: The scripts pyrsa-decrypt, pyrsa-decrypt-bigfile, pyrsa-encrypt, pyrsa-encrypt-bigfile, pyrsa-keygen, pyrsa-priv2pub, pyrsa-sign and pyrsa-verify are installed &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/Users/minky/.local/bin'&lt;/span&gt; which is not on PATH.
Consider adding this directory to PATH or, &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;you prefer to suppress this warning, use &lt;span class=&quot;nt&quot;&gt;--no-warn-script-location&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Successfully installed awscli-1.18.5 botocore-1.15.5 jmespath-0.9.4 pyasn1-0.4.8 rsa-3.4.2 s3transfer-0.3.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;macOS 명령줄 경로에 AWS CLI 버전 1 실행 파일 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which python
/opt/anaconda3/bin/python

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt; /opt/anaconda3/bin/python
lrwxr-xr-x  1 minky  wheel  9  1 19 14:48 /opt/anaconda3/bin/python -&amp;gt; python3.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;homebrew로-설치-성공&quot;&gt;homebrew로 설치 성공&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://civilizeddev.github.io/2019/01/14/awscli-on-macos.html&quot;&gt;AWS CLI on MacOS&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;awscli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;aws-cli-설정&quot;&gt;AWS CLI 설정&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-configure.html&quot; target=&quot;_blank&quot;&gt;AWS CLI 구성&lt;/a&gt; &amp;gt; 빠르게 AWS CLI 구성&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Key ID, Secret access key : AWS IAM에서 생성한 유저의 정보를 입력
    &lt;ul&gt;
      &lt;li&gt;기존 키값 분실 시 Users &amp;gt; 해당 유저 &amp;gt; Security credentials &amp;gt; create access key로 다시 생성 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Default region name : 데이터 센터 지역 eg. ap-northeast-2(Seoul)&lt;/li&gt;
  &lt;li&gt;Default output format : (Null → 그냥 엔터키 입력)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;aws configure
AWS Access Key ID &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: AKIAIOSFODNN7EXAMPLE
AWS Secret Access Key &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
Default region name &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: us-west-2
Default output format &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]: json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="aws" /><category term="cli" /><category term="iam" /><summary type="html">Amazon Cloud Amazon console Service 개요 Compute EC2 Service &amp;gt; Compute &amp;gt; EC2 가상 클라우드 서버 Lambda : Serverless Storage S3 : 데이터 저장 Database RDS : MySQL, Postgre 등 DynamoDB : NoSQL Amazon RedShift Networking &amp;amp; Content Delivery API Gateway : 우리의 API를 만들 예정 Management &amp;amp; Governance CloudWatch : 다양한 로그를 통해 에러 해결, 퍼포먼스 모니터링 등에 사용 Analytics Athena : Presto 기반의 서비스로 우리가 사용할 예정 Kinesis : 데이터를 프로세싱 Data Pipeline AWS Glue Security, Identity, &amp;amp; Compliance IAM User, Permission 관리 서비스 웹에 접속하지 않고 로컬에서 Console과 통신 IAM Identity and Access Management User, Group, Role 등 관리 Add User User name Access type Programmatic access [✔] → CLI 사용을 위해 선택 Enables an access key ID and secret access key for the AWS API, CLI, SDK, and other development tools. AWS Management Console access Enables a password that allows users to sign-in to the AWS Management Console. Set permissions Add user to group : User를 그룹으로 관리 가능. 지금은 그룹없이 진행 Copy permissions from existing user : 기존 유저의 권한 설정을 복사해서 권한 부여 eg. full permissions Attach existing policies directly : 부여할 권한 선택 AdministratorAcess [✔] : 전체 권한을 갖도록 설정 Add tags (Optional) 지금은 패스 User review Success You successfully created the users shown below. You can view and download user security credentials. You can also email users instructions for signing in to the AWS Management Console. This is the last time these credentials will be available to download. However, you can create new credentials at any time. Users with AWS Management Console access can sign-in at: https://950825810068.signin.aws.amazon.com/console AWS Command Line Interface (CLI) AWS CLI 설치 Amazon CLI Install CHECK AWS CLI는 두 가지 버전으로 제공됩니다. 버전 1.x – 일반적으로 사용 가능한 AWS CLI 버전이며 프로덕션 환경에서 사용하기에 더 적합합니다. 버전 2.x – 테스트 및 평가용으로 사용되는 AWS CLI의 미리 보기 버전입니다. 이 버전에는 스크립트가 예상대로 계속 작동하도록 스크립트를 변경해야 할 수 있는 “주요” 변경 사항이 포함되어 있습니다. 버전 2의 새로운 기능 및 주요 변경 사항 목록은 호환성에 영향을 미치는 변경 – AWS CLI 버전 1에서 버전 2로 마이그레이션 단원을 참조하십시오. ⇒ 강의에 나온대로 버전 1로 진행 사전 준비 Python 2.7, Python 3.4 또는 이후 버전 필수 (이전 버전의 파인썬 지원 중단 2020.01.10) $ python --version Python 3.7.4 pip3 설치 확인 : Python 3.7 설치 시 자동 설치된다고 함 $ pip3 --version pip 19.0.3 from /usr/local/lib/python3.7/site-packages/pip (python 3.7) 번들 설치 관리자는 공백을 포함하는 경로에 설치하는 것을 미지원 → 공백이 없도록 경로 정리할 것! 설치하기 번들 설치 관리자를 사용 / pip를 사용 설치 방법 중 선택 PIP로 설치 REF pip를 사용하여 macOS에 AWS CLI 버전 1 설치 $ pip3 install awscli --upgrade --user PIP 설치 오류 REF pip SSL 관련 오류 해결 방법 openssl 재설치 오류 $ pip3 install awscli --upgrade --user ... Could not fetch URL https://pypi.org/simple/awscli/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/awscli/ (Caused by SSLError(&quot;Can't connect to HTTPS URL because the SSL module is not available.&quot;)) - skipping Could not find a version that satisfies the requirement awscli (from versions: ) No matching distribution found for awscli pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available. 해결 시도 REF SSL: CERTIFICATE_VERIFY_FAILED with Python 3.6.0 ssl 재설치 시도했으나 해결되지 않았다 $ brew install openssl 결국 이렇게 설치에 성공하는 듯 했으나 aws가 실제로 설치가 되지 않아 not found command란다 $ pip --trusted-host pypi.org install awscli --upgrade --user Collecting awscli Downloading https://files.pythonhosted.org/packages/3f/32/2914f9bdd89429db51050760698af77021ba3bd52261fe8714de628c3691/awscli-1.18.5-py2.py3-none-any.whl (2.9MB) |████████████████████████████████| 2.9MB 577kB/s Collecting rsa&amp;lt;=3.5.0,&amp;gt;=3.1.2 (from awscli) Downloading https://files.pythonhosted.org/packages/e1/ae/baedc9cb175552e95f3395c43055a6a5e125ae4d48a1d7a924baca83e92e/rsa-3.4.2-py2.py3-none-any.whl (46kB) |████████████████████████████████| 51kB 7.5MB/s Requirement already satisfied, skipping upgrade: colorama&amp;lt;0.4.4,&amp;gt;=0.2.5; python_version != &quot;3.4&quot; in /opt/anaconda3/lib/python3.7/site-packages (from awscli) (0.4.1) Collecting botocore==1.15.5 (from awscli) Downloading https://files.pythonhosted.org/packages/40/2b/f290e79241a6b07ab955a65d0395128bb300711ef37589a01696de1c5b5f/botocore-1.15.5-py2.py3-none-any.whl (5.9MB) |████████████████████████████████| 5.9MB 384kB/s Requirement already satisfied, skipping upgrade: PyYAML&amp;lt;5.3,&amp;gt;=3.10 in /opt/anaconda3/lib/python3.7/site-packages (from awscli) (5.1.2) Requirement already satisfied, skipping upgrade: docutils&amp;lt;0.16,&amp;gt;=0.10 in /opt/anaconda3/lib/python3.7/site-packages (from awscli) (0.15.2) Collecting s3transfer&amp;lt;0.4.0,&amp;gt;=0.3.0 (from awscli) Downloading https://files.pythonhosted.org/packages/69/79/e6afb3d8b0b4e96cefbdc690f741d7dd24547ff1f94240c997a26fa908d3/s3transfer-0.3.3-py2.py3-none-any.whl (69kB) |████████████████████████████████| 71kB 495kB/s Collecting pyasn1&amp;gt;=0.1.3 (from rsa&amp;lt;=3.5.0,&amp;gt;=3.1.2-&amp;gt;awscli) Downloading https://files.pythonhosted.org/packages/62/1e/a94a8d635fa3ce4cfc7f506003548d0a2447ae76fd5ca53932970fe3053f/pyasn1-0.4.8-py2.py3-none-any.whl (77kB) |████████████████████████████████| 81kB 290kB/s Requirement already satisfied, skipping upgrade: urllib3&amp;lt;1.26,&amp;gt;=1.20; python_version != &quot;3.4&quot; in /opt/anaconda3/lib/python3.7/site-packages (from botocore==1.15.5-&amp;gt;awscli) (1.24.2) Collecting jmespath&amp;lt;1.0.0,&amp;gt;=0.7.1 (from botocore==1.15.5-&amp;gt;awscli) Downloading https://files.pythonhosted.org/packages/83/94/7179c3832a6d45b266ddb2aac329e101367fbdb11f425f13771d27f225bb/jmespath-0.9.4-py2.py3-none-any.whl Requirement already satisfied, skipping upgrade: python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1 in /opt/anaconda3/lib/python3.7/site-packages (from botocore==1.15.5-&amp;gt;awscli) (2.8.0) Requirement already satisfied, skipping upgrade: six&amp;gt;=1.5 in /opt/anaconda3/lib/python3.7/site-packages (from python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1-&amp;gt;botocore==1.15.5-&amp;gt;awscli) (1.12.0) Installing collected packages: pyasn1, rsa, jmespath, botocore, s3transfer, awscli WARNING: The scripts pyrsa-decrypt, pyrsa-decrypt-bigfile, pyrsa-encrypt, pyrsa-encrypt-bigfile, pyrsa-keygen, pyrsa-priv2pub, pyrsa-sign and pyrsa-verify are installed in '/Users/minky/.local/bin' which is not on PATH. Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location. Successfully installed awscli-1.18.5 botocore-1.15.5 jmespath-0.9.4 pyasn1-0.4.8 rsa-3.4.2 s3transfer-0.3.3 macOS 명령줄 경로에 AWS CLI 버전 1 실행 파일 추가 $ which python /opt/anaconda3/bin/python $ ls -al /opt/anaconda3/bin/python lrwxr-xr-x 1 minky wheel 9 1 19 14:48 /opt/anaconda3/bin/python -&amp;gt; python3.7 homebrew로 설치 성공 AWS CLI on MacOS brew install awscli AWS CLI 설정 REF AWS CLI 구성 &amp;gt; 빠르게 AWS CLI 구성 Key ID, Secret access key : AWS IAM에서 생성한 유저의 정보를 입력 기존 키값 분실 시 Users &amp;gt; 해당 유저 &amp;gt; Security credentials &amp;gt; create access key로 다시 생성 가능 Default region name : 데이터 센터 지역 eg. ap-northeast-2(Seoul) Default output format : (Null → 그냥 엔터키 입력) $ aws configure AWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE AWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY Default region name [None]: us-west-2 Default output format [None]: json REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 02 - UNIX 환경 및 커맨드</title><link href="http://0.0.0.0:4000/dataengineer/UnixBase" rel="alternate" type="text/html" title="DataEngineer 02 - UNIX 환경 및 커맨드" /><published>2020-02-23T00:18:00+09:00</published><updated>2020-02-23T00:18:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/UnixBase</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/UnixBase">&lt;h1 id=&quot;unix--shell-commands&quot;&gt;UNIX / Shell Commands&lt;/h1&gt;

&lt;h2 id=&quot;unix-기본-command&quot;&gt;UNIX 기본 Command&lt;/h2&gt;

&lt;h3 id=&quot;terminal-shortcut&quot;&gt;Terminal Shortcut&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Ctrl + L : clear&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;navigating-files-and-directions&quot;&gt;Navigating Files and Directions&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;cd &lt;em&gt;path&lt;/em&gt; : 경로 진입&lt;/li&gt;
  &lt;li&gt;ls &lt;em&gt;path&lt;/em&gt; : 경로 내 리스트
    &lt;ul&gt;
      &lt;li&gt;ls al : 숨긴파일 포함 보기&lt;/li&gt;
      &lt;li&gt;ls al &lt;em&gt;path&lt;/em&gt; : symlink 보기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;pwd : 현 위치 경로 반환&lt;/li&gt;
  &lt;li&gt;.. : 상위 경로&lt;/li&gt;
  &lt;li&gt;. : 해당 폴더&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;files-and-directories&quot;&gt;Files and Directories&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;cp &lt;em&gt;old new&lt;/em&gt; : 파일 복사&lt;/li&gt;
  &lt;li&gt;rm &lt;em&gt;path&lt;/em&gt; : 파일 삭제&lt;/li&gt;
  &lt;li&gt;mkdir &lt;em&gt;path&lt;/em&gt; : 폴더 생성&lt;/li&gt;
  &lt;li&gt;cp -r &lt;em&gt;folder&lt;/em&gt; / rm -r &lt;em&gt;folder&lt;/em&gt; : 폴더 복사 / 삭제&lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;: 전체&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;search&quot;&gt;Search&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;which &lt;em&gt;tool&lt;/em&gt; : 프로그램 설치 위치 찾기 (단, symlink일 수 있으니 확인 필요)&lt;/li&gt;
  &lt;li&gt;echo $SHELL : 쉘의 프로필 스크립트 찾기
    &lt;ul&gt;
      &lt;li&gt;Bash : .bash_profile, .profile 또는 .bash_login&lt;/li&gt;
      &lt;li&gt;Zsh : .zshrc&lt;/li&gt;
      &lt;li&gt;Tcsh : .tcshrc, .cshrc, 또는 .login&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pipes-and-filters&quot;&gt;Pipes and Filters&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;cat : 파일 내용 출력&lt;/li&gt;
  &lt;li&gt;head : 파일의 처음 10줄 출력&lt;/li&gt;
  &lt;li&gt;tail : 파일 마지막 10줄 출력&lt;/li&gt;
  &lt;li&gt;command &amp;gt; file : file에 command의 결과를 저장 eg. python3 exam.py &amp;gt; exam.txt&lt;/li&gt;
  &lt;li&gt;command » file : file에 command의 결과를 추가 저장(append)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;shell-script&quot;&gt;Shell Script&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;시스템 자동화 설정 가능&lt;/li&gt;
  &lt;li&gt;example.py
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 시스템에 입력되는 인덱스 1을 출력
&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;shell 파일 : run.sh
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;#!/bin/bhash&lt;/span&gt;

  python3 example.py 1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; example.txt
  python3 example.py 2 &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; example.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Terminal에서 run.sh를 실행 → example.txt에 1,2가 누적 저장됨&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><summary type="html">UNIX / Shell Commands UNIX 기본 Command Terminal Shortcut Ctrl + L : clear Navigating Files and Directions cd path : 경로 진입 ls path : 경로 내 리스트 ls al : 숨긴파일 포함 보기 ls al path : symlink 보기 pwd : 현 위치 경로 반환 .. : 상위 경로 . : 해당 폴더 Files and Directories cp old new : 파일 복사 rm path : 파일 삭제 mkdir path : 폴더 생성 cp -r folder / rm -r folder : 폴더 복사 / 삭제 : 전체 Search which tool : 프로그램 설치 위치 찾기 (단, symlink일 수 있으니 확인 필요) echo $SHELL : 쉘의 프로필 스크립트 찾기 Bash : .bash_profile, .profile 또는 .bash_login Zsh : .zshrc Tcsh : .tcshrc, .cshrc, 또는 .login Pipes and Filters cat : 파일 내용 출력 head : 파일의 처음 10줄 출력 tail : 파일 마지막 10줄 출력 command &amp;gt; file : file에 command의 결과를 저장 eg. python3 exam.py &amp;gt; exam.txt command » file : file에 command의 결과를 추가 저장(append) Shell Script 시스템 자동화 설정 가능 example.py import sys def main(): print(sys.argv[1]) # 시스템에 입력되는 인덱스 1을 출력 if __name__='__main__': main() shell 파일 : run.sh #!/bin/bhash python3 example.py 1 &amp;gt;&amp;gt; example.txt python3 example.py 2 &amp;gt;&amp;gt; example.txt Terminal에서 run.sh를 실행 → example.txt에 1,2가 누적 저장됨 REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">DataEngineer 01 - 데이터 아키텍처</title><link href="http://0.0.0.0:4000/dataengineer/DataArchitecture" rel="alternate" type="text/html" title="DataEngineer 01 - 데이터 아키텍처" /><published>2020-02-23T00:18:00+09:00</published><updated>2020-02-23T00:18:00+09:00</updated><id>http://0.0.0.0:4000/dataengineer/DataArchitecture</id><content type="html" xml:base="http://0.0.0.0:4000/dataengineer/DataArchitecture">&lt;h1 id=&quot;데이터-엔지니어의-필요성&quot;&gt;데이터 엔지니어의 필요성&lt;/h1&gt;

&lt;h3 id=&quot;문제-해결을-위한-가설-검증-단계&quot;&gt;문제 해결을 위한 가설 검증 단계&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;모든 비지니스가 동일한 데이터 분석 환경을 갖출 수가 없다&lt;/li&gt;
  &lt;li&gt;성장 단계에 따라 선택 집중해야 하는 분석 환경이 다르다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img01.png&quot; alt=&quot;Image&quot; /&gt;&lt;br /&gt;
&lt;em&gt;데이터 기반 가설 검증단계&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-아키텍처-시-고려사항&quot;&gt;데이터 아키텍처 시 고려사항&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;비지니스 모델 상 가장 중요한 데이터는 무엇?
    &lt;ul&gt;
      &lt;li&gt;비용 대비 비지니스 임팩트가 높은 데이터 확보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 거버넌스(Data Governance)&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;원칙(Principle)&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;조직(Organization)&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;프로세스(Process)&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;- 데이터를 유지하기 위한 가이드&lt;br /&gt;- 보안, 품질, 변경관리&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;- 데이터를 관리할 조직의 역할과 책임&lt;br /&gt;- 데이터 관리자, 데이터 아키텍트 담당자 지정&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;- 데이터 관리를 위한 시스템&lt;br /&gt;- 작업절차, 모니터 및 측정&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;유연하고 변화 가능한 환경 구축
    &lt;ul&gt;
      &lt;li&gt;새로운 기술을 빠르게 반영할 수 있도록 구축&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Real Time(실시간) 데이터 핸들링이 가능한 시스템
    &lt;ul&gt;
      &lt;li&gt;데이터 아키텍쳐는 모든 스피드의 데이터를 핸들링
        &lt;ul&gt;
          &lt;li&gt;Real Time Streaming Data Processing&lt;/li&gt;
          &lt;li&gt;Cronjob : 스케쥴링을 통해서 데이터를 처리하는 시스템&lt;/li&gt;
          &lt;li&gt;Serverless Triggered Data Processing&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;시큐리티
    &lt;ul&gt;
      &lt;li&gt;데이터를 안전하게 보관&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;셀프 서비스 환경 구축
    &lt;ul&gt;
      &lt;li&gt;BI Tools&lt;/li&gt;
      &lt;li&gt;Query System for Analysis&lt;/li&gt;
      &lt;li&gt;Front-end data applications&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터-시스텝-옵션&quot;&gt;데이터 시스텝 옵션&lt;/h1&gt;

&lt;h3 id=&quot;api&quot;&gt;API&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;마케팅, CRM, ERP 등 다양한 플랫폼 및 소프트웨어들은 API를 통해 데이터를 주고 받을 수 있는 환경을 구축하여 생태계를 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;relational-database&quot;&gt;Relational Database&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;대부분의 서비스들이 가장 많이 쓰고 있는 데이터 시스템&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nosql-database&quot;&gt;NoSQL Database&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Not Only SQL&lt;/li&gt;
  &lt;li&gt;Unstructured, Schema Less Data&lt;/li&gt;
  &lt;li&gt;Scale horizontally (예: 메신저)&lt;/li&gt;
  &lt;li&gt;Highly scalable / Less expensive to maintain&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hadoop-spark-presto-등의-빅데이터-처리&quot;&gt;Hadoop, Spark, Presto 등의 빅데이터 처리&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Distributed Storage System / MapReduce를 통한 병렬 처리
    &lt;ul&gt;
      &lt;li&gt;나눠서 처리한 저장 시스템&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Spark:
    &lt;ul&gt;
      &lt;li&gt;Hadoop의 진화된 버전으로 빅데이터 분석 환경에서 Real Time 데이터를 프로세싱하기에 더 최적화&lt;/li&gt;
      &lt;li&gt;Java, Python, Scala를 통한 API를 제공하여 애플리케이션 생성 가능&lt;/li&gt;
      &lt;li&gt;SQL Query 환경을 서포트하여 분석가들에게 더 각광&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;serverless-framework&quot;&gt;Serverless Framework&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Triggered by http requests, database events, queuing services&lt;/li&gt;
  &lt;li&gt;장점
    &lt;ul&gt;
      &lt;li&gt;Pay as you use&lt;/li&gt;
      &lt;li&gt;Form of functions&lt;/li&gt;
      &lt;li&gt;$3^{rd}$ Party 앱들 및 다양한 API를 통해 데이터를 수집 정제하는데 유용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;데이터-파이프라인&quot;&gt;데이터 파이프라인&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;데이터를 옮기는 개념&lt;/li&gt;
  &lt;li&gt;eg.
    &lt;ul&gt;
      &lt;li&gt;API → database&lt;/li&gt;
      &lt;li&gt;database → database&lt;/li&gt;
      &lt;li&gt;API → BI Tool&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img02.png&quot; alt=&quot;Image&quot; /&gt;&lt;br /&gt;
&lt;em&gt;데이터 파이프라인 예시&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;데이터-파이프라인이-필요한-경우&quot;&gt;데이터 파이프라인이 필요한 경우&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;다양한 데이터 소스들로부터 많은 데이터를 생성하고 저장하는 서비스&lt;/li&gt;
  &lt;li&gt;데이터 사일로 : 마케팅, 어카운팅, 세일즈, 오퍼레이션 등 각 영역의 데이터가 서로 고립되어 있는 경우 → 데이터 통합 필요&lt;/li&gt;
  &lt;li&gt;실시간 혹은 높은 수준의 데이터 분석이 필요한 비지니스 모델&lt;/li&gt;
  &lt;li&gt;클라우드 환경으로 데이터 저장&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-파이프라인-구축-시-고려사항&quot;&gt;데이터 파이프라인 구축 시 고려사항&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Scalability : 데이터가 기하급수적으로 급증해도 작동하는가&lt;/li&gt;
  &lt;li&gt;Stability : Error, Data Flow 등 다양한 모니터링&lt;/li&gt;
  &lt;li&gt;Security : 데이터 이동 간 보안 관련 리스크&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;데이터-프로세싱-자동화&quot;&gt;데이터 프로세싱 자동화&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;필요한 데이터의 추출/수집/정제의 과정을 자동으로 머신이 처리하도록 하는 것&lt;/li&gt;
  &lt;li&gt;eg. 자동으로 정해진 시간에 API를 통해 정보를 가져와 Database에 저장하도록 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img03.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;AWS Data Pipeline, AWS Step Functions 등&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;자동화-고려사항&quot;&gt;자동화 고려사항&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Data Processing Steps
    &lt;ul&gt;
      &lt;li&gt;API로 정보를 가져와서 정제하고 저장한 후 알고리즘을 적용하는 등의 단계 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Error Handling 및 Monitoring
    &lt;ul&gt;
      &lt;li&gt;오류 발생으로 실패 시 재시도 횟수 설정 등&lt;/li&gt;
      &lt;li&gt;Performance 등을 지속적으로 관찰
        &lt;ul&gt;
          &lt;li&gt;Python Logging Package
 &lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img04.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/li&gt;
          &lt;li&gt;Cloud Logging Systems
            &lt;ul&gt;
              &lt;li&gt;AWS Cloudwatch&lt;/li&gt;
              &lt;li&gt;AWS Data Pipeline Errors&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Trigger / Scheduling&lt;br /&gt;
&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img05.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;빅데이터-처리를-위한-데이터-레이크&quot;&gt;빅데이터 처리를 위한 데이터 레이크&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/dataengineer/DataArchitecture/img06.png&quot;&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img06.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Amazon S3 : 빅데이터 저장소&lt;/li&gt;
  &lt;li&gt;Amazon EMR : Spark에 특화된 컴퓨팅 시스템&lt;/li&gt;
  &lt;li&gt;Amazon RedShift : 대용량 데이터 저장소 (RDB)&lt;/li&gt;
  &lt;li&gt;Amazon Athena : Spark 기반의 Presto라느 엔진 위에 올려진 서버리스 프레임워크&lt;/li&gt;
  &lt;li&gt;Amazon RDS : Relational Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img07.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;br /&gt;
&lt;em&gt;넷플릭스 데이터 시스템 예시&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;ad-hoc-vs-automated&quot;&gt;AD hoc vs Automated&lt;/h1&gt;

&lt;h3 id=&quot;ad-hoc&quot;&gt;AD hoc&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;원할 때 분석하도록 환경을 구축하는 것&lt;/li&gt;
  &lt;li&gt;Ad hoc 분석 환경 구축은 서비스를 지속적으로 빠르게 변화시키기 위해 필수 적인 요소&lt;/li&gt;
  &lt;li&gt;이니셜 데이터 삽입, 데이터 Backfill 등을 위해 Ad hoc 데이터 프로세싱 시스 템 구축 필요&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;automated&quot;&gt;Automated&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;이벤트, 스케쥴 등 트리거를 통해 자동화 시스템 구축&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;spotify-프로젝트&quot;&gt;Spotify 프로젝트&lt;/h1&gt;

&lt;h3 id=&quot;데이터-수집-프로세스&quot;&gt;데이터 수집 프로세스&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img08.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;아티스트 관련 데이터 수집
    &lt;ul&gt;
      &lt;li&gt;자동화된 프로세스 : 챗봇 메시지로 시작해서 데이터 수집&lt;/li&gt;
      &lt;li&gt;Ad hoc으로 데이터 수집&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;데이터-분석-환경-구축&quot;&gt;데이터 분석 환경 구축&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;데이터를 어떻게 compute해서 사용할 지&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img09.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;서비스-관련-데이터-프로세스&quot;&gt;서비스 관련 데이터 프로세스&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/dataengineer/DataArchitecture/img10.png&quot; alt=&quot;Image&quot; width=&quot;600px&quot; /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Compute Engine : Spark 사용&lt;/li&gt;
  &lt;li&gt;Service Data : DynamoDB
    &lt;ul&gt;
      &lt;li&gt;NoSQL 사용 이유 : performance, schema가 없는 NoSQL의 데이터의 확장성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt;&lt;br /&gt;
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>MiKy</name></author><category term="DataEngineer" /><category term="data" /><category term="dataengineer" /><category term="dataarchitecture" /><summary type="html">데이터 엔지니어의 필요성 문제 해결을 위한 가설 검증 단계 모든 비지니스가 동일한 데이터 분석 환경을 갖출 수가 없다 성장 단계에 따라 선택 집중해야 하는 분석 환경이 다르다 데이터 기반 가설 검증단계 데이터 아키텍처 시 고려사항 비지니스 모델 상 가장 중요한 데이터는 무엇? 비용 대비 비지니스 임팩트가 높은 데이터 확보 데이터 거버넌스(Data Governance) 원칙(Principle) 조직(Organization) 프로세스(Process) - 데이터를 유지하기 위한 가이드- 보안, 품질, 변경관리 - 데이터를 관리할 조직의 역할과 책임- 데이터 관리자, 데이터 아키텍트 담당자 지정 - 데이터 관리를 위한 시스템- 작업절차, 모니터 및 측정 유연하고 변화 가능한 환경 구축 새로운 기술을 빠르게 반영할 수 있도록 구축 Real Time(실시간) 데이터 핸들링이 가능한 시스템 데이터 아키텍쳐는 모든 스피드의 데이터를 핸들링 Real Time Streaming Data Processing Cronjob : 스케쥴링을 통해서 데이터를 처리하는 시스템 Serverless Triggered Data Processing 시큐리티 데이터를 안전하게 보관 셀프 서비스 환경 구축 BI Tools Query System for Analysis Front-end data applications 데이터 시스텝 옵션 API 마케팅, CRM, ERP 등 다양한 플랫폼 및 소프트웨어들은 API를 통해 데이터를 주고 받을 수 있는 환경을 구축하여 생태계를 생성 Relational Database 대부분의 서비스들이 가장 많이 쓰고 있는 데이터 시스템 NoSQL Database Not Only SQL Unstructured, Schema Less Data Scale horizontally (예: 메신저) Highly scalable / Less expensive to maintain Hadoop, Spark, Presto 등의 빅데이터 처리 Distributed Storage System / MapReduce를 통한 병렬 처리 나눠서 처리한 저장 시스템 Spark: Hadoop의 진화된 버전으로 빅데이터 분석 환경에서 Real Time 데이터를 프로세싱하기에 더 최적화 Java, Python, Scala를 통한 API를 제공하여 애플리케이션 생성 가능 SQL Query 환경을 서포트하여 분석가들에게 더 각광 Serverless Framework Triggered by http requests, database events, queuing services 장점 Pay as you use Form of functions $3^{rd}$ Party 앱들 및 다양한 API를 통해 데이터를 수집 정제하는데 유용 데이터 파이프라인 데이터를 옮기는 개념 eg. API → database database → database API → BI Tool 데이터 파이프라인 예시 데이터 파이프라인이 필요한 경우 다양한 데이터 소스들로부터 많은 데이터를 생성하고 저장하는 서비스 데이터 사일로 : 마케팅, 어카운팅, 세일즈, 오퍼레이션 등 각 영역의 데이터가 서로 고립되어 있는 경우 → 데이터 통합 필요 실시간 혹은 높은 수준의 데이터 분석이 필요한 비지니스 모델 클라우드 환경으로 데이터 저장 데이터 파이프라인 구축 시 고려사항 Scalability : 데이터가 기하급수적으로 급증해도 작동하는가 Stability : Error, Data Flow 등 다양한 모니터링 Security : 데이터 이동 간 보안 관련 리스크 데이터 프로세싱 자동화 필요한 데이터의 추출/수집/정제의 과정을 자동으로 머신이 처리하도록 하는 것 eg. 자동으로 정해진 시간에 API를 통해 정보를 가져와 Database에 저장하도록 설정 AWS Data Pipeline, AWS Step Functions 등 자동화 고려사항 Data Processing Steps API로 정보를 가져와서 정제하고 저장한 후 알고리즘을 적용하는 등의 단계 설정 Error Handling 및 Monitoring 오류 발생으로 실패 시 재시도 횟수 설정 등 Performance 등을 지속적으로 관찰 Python Logging Package Cloud Logging Systems AWS Cloudwatch AWS Data Pipeline Errors Trigger / Scheduling 빅데이터 처리를 위한 데이터 레이크 Amazon S3 : 빅데이터 저장소 Amazon EMR : Spark에 특화된 컴퓨팅 시스템 Amazon RedShift : 대용량 데이터 저장소 (RDB) Amazon Athena : Spark 기반의 Presto라느 엔진 위에 올려진 서버리스 프레임워크 Amazon RDS : Relational Database 넷플릭스 데이터 시스템 예시 AD hoc vs Automated AD hoc 원할 때 분석하도록 환경을 구축하는 것 Ad hoc 분석 환경 구축은 서비스를 지속적으로 빠르게 변화시키기 위해 필수 적인 요소 이니셜 데이터 삽입, 데이터 Backfill 등을 위해 Ad hoc 데이터 프로세싱 시스 템 구축 필요 Automated 이벤트, 스케쥴 등 트리거를 통해 자동화 시스템 구축 Spotify 프로젝트 데이터 수집 프로세스 아티스트 관련 데이터 수집 자동화된 프로세스 : 챗봇 메시지로 시작해서 데이터 수집 Ad hoc으로 데이터 수집 데이터 분석 환경 구축 데이터를 어떻게 compute해서 사용할 지 서비스 관련 데이터 프로세스 Compute Engine : Spark 사용 Service Data : DynamoDB NoSQL 사용 이유 : performance, schema가 없는 NoSQL의 데이터의 확장성 REF 패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</summary></entry><entry><title type="html">Python 기초 8 - 정규 표현식</title><link href="http://0.0.0.0:4000/python/RegularExpression" rel="alternate" type="text/html" title="Python 기초 8 - 정규 표현식" /><published>2020-02-22T17:34:00+09:00</published><updated>2020-02-22T17:34:00+09:00</updated><id>http://0.0.0.0:4000/python/RegularExpression</id><content type="html" xml:base="http://0.0.0.0:4000/python/RegularExpression">&lt;h1 id=&quot;정규표현식&quot;&gt;정규표현식&lt;/h1&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;regular expression, re&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;특정한 패턴과 일치하는 문자열를 ‘검색’, ‘치환’, ‘제거’ 하는 기능을 지원&lt;/li&gt;
  &lt;li&gt;정규표현식의 도움없이 패턴을 찾는 작업(Rule 기반)은 불완전 하거나 작업의 cost가 높음&lt;/li&gt;
  &lt;li&gt;crawling에서도 많이 사용&lt;/li&gt;
  &lt;li&gt;eg. 이메일 형식 판별, 전화번호 형식 판별, 숫자로만 이루어진 문자열 등&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;raw-string&quot;&gt;raw string&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;문자열 앞에 r이 붙으면 해당 문자열이 구성된 그대로 문자열로 변환&lt;/li&gt;
  &lt;li&gt;정규표현식 사용 시 raw string을 이용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'abcdef&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# escape 문자열
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'abcdef\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;----------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;abcdef&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;abcdef&lt;/span&gt;\&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;search-함수&quot;&gt;search 함수&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re.search(r'pattern', string, flag[optional])&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re&lt;/code&gt; 패키지 임포트해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt; 함수 사용&lt;/li&gt;
  &lt;li&gt;첫 번째로 패턴을 찾으면 match 객체를 반환
    &lt;ul&gt;
      &lt;li&gt;match.start() : 시작 인덱스&lt;/li&gt;
      &lt;li&gt;match.end() : 종료 인덱스&lt;/li&gt;
      &lt;li&gt;match.group() : 그룹 정보&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'abcdef'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;----------------&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'abc'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;패턴을 찾지 못하면 None 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'abc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'abdef'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;----------------&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NoneType&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;검색 예제&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 3자리 숫자 검색
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'123abcd456'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 4자리 숫자 검색
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'123abcd456'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;# 3자리 숫자와 다음 1자리 문자 검색
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d\w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'123abcd456'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 2자리 모든 패턴과 2자리 문자 검색
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'..\w\w'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'@#$#ABCDabcd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'$#AB'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;기본-패턴&quot;&gt;기본 패턴&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;REF&lt;/strong&gt; &lt;a href=&quot;https://docs.python.org/3/library/re.html&quot; target=&quot;_blank&quot;&gt;re — Regular expression operations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;character&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;a, X, 9 등등 문자 하나하나의 글자들은 정확히 해당 문자와 일치&lt;/li&gt;
      &lt;li&gt;eg. 패턴 test는 test 문자열과 일치하는 지를 검사&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;대소문자&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;기본적으로 대소문자 구별&lt;/li&gt;
      &lt;li&gt;구별하지 않도록 설정도 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;예외 문자&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;. ^ $ * + ? { } [ ] ( ) \ |&lt;/li&gt;
      &lt;li&gt;몇몇 문자들에 대해서는 예외 존재 → 특별한 의미로 사용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;. (마침표)&lt;/strong&gt; : 어떤 한개의 character와 일치 (newline(엔터) 제외)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;\w&lt;/strong&gt; : 문자 character(대소문자, 숫자) 1개와 일치 [a-zA-Z0-9_]&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;\d&lt;/strong&gt; : 숫자 character 1개와 일치 [0-9]&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;\s&lt;/strong&gt; : 공백문자와 일치&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;\t, \n, \r&lt;/strong&gt; : tab, newline, return&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;^, $&lt;/strong&gt; : 각각 문자열의 시작과 끝&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;\ (백슬래시)&lt;/strong&gt;가 붙으면 스페셜한 의미가 없어짐
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;\.&lt;/strong&gt; : .자체를 의미&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;\\&lt;/strong&gt; : \를 의미&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;메타-캐릭터-metacharacters&quot;&gt;메타 캐릭터 (metacharacters)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;특별한 의미로 사용되는 예외 문자&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--대괄호&quot;&gt;[ ] (대괄호)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;문자들의 범위를 나타내기 위해 사용&lt;/li&gt;
  &lt;li&gt;[] 내부의 메타 캐릭터는 캐릭터 자체를 의미 → 예외문자로 처리되지 않음&lt;/li&gt;
  &lt;li&gt;pattern
    &lt;ul&gt;
      &lt;li&gt;[나열] : or&lt;/li&gt;
      &lt;li&gt;[시작-끝] : &lt;strong&gt;-&lt;/strong&gt;와 함께 사용되면 해당 문자 사이의 범위에 속하는 문자 중 하나&lt;/li&gt;
      &lt;li&gt;[^패턴] : ^가 맨 앞에 사용 되는 경우 NOT처럼 적용 → 해당 문자 패턴이 아닌 것과 매칭&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;eg.
    &lt;ul&gt;
      &lt;li&gt;[abck] : a or b or c or k&lt;/li&gt;
      &lt;li&gt;[abc.^] : a or b or c or . or ^&lt;/li&gt;
      &lt;li&gt;[a-d] : abcd&lt;/li&gt;
      &lt;li&gt;[0-9] : 모든 숫자&lt;/li&gt;
      &lt;li&gt;[a-z] : 모든 소문자&lt;/li&gt;
      &lt;li&gt;[A-Z] : 모든 대문자&lt;/li&gt;
      &lt;li&gt;[a-zA-Z0-9] : 모든 알파벳 대소문자 및 숫자&lt;/li&gt;
      &lt;li&gt;[^0-9] : 숫자가 아닌 것&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-백슬래시&quot;&gt;\ (백슬래시)&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;다른 문자와 함께 사용되어 특수한 의미를 지님
    &lt;ul&gt;
      &lt;li&gt;\d : 숫자 → [0-9]와 동일&lt;/li&gt;
      &lt;li&gt;\D : 숫자가 아닌 문자 → [^0-9]와 동일&lt;/li&gt;
      &lt;li&gt;\s : 공백 문자(띄어쓰기, 탭, 엔터 등)&lt;/li&gt;
      &lt;li&gt;\S : 공백이 아닌 문자&lt;/li&gt;
      &lt;li&gt;\w : 알파벳대소문자 숫자 → [0-9a-zA-Z]와 동일&lt;/li&gt;
      &lt;li&gt;\W : non alpha-numeric 문자 → [^0-9a-zA-Z]와 동일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;메타 캐릭터가 캐릭터 자체를 표현하도록 할 경우 사용
    &lt;ul&gt;
      &lt;li&gt;\. , \\&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;-마침표&quot;&gt;. (마침표)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;모든 문자를 의미&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'p.g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'pig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pig'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;틸드-달러&quot;&gt;^(틸드), $(달러)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;^ : 문자열의 맨 앞부터 일치하는 경우 검색. 해당 문자열로 시작&lt;/li&gt;
  &lt;li&gt;$ : 문자열의 맨 뒤부터 일치하는 경우 검색. 해당 문자열로 끝&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;반복패턴&quot;&gt;반복패턴&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;패턴 뒤에 위치하는 *, +, ?는 해당 패턴이 반복적으로 존재하는지 검사
    &lt;ul&gt;
      &lt;li&gt;’+’ → 1번 이상의 패턴이 발생&lt;/li&gt;
      &lt;li&gt;‘*’ → 0번 이상의 패턴이 발생 (없는 경우도 포함)&lt;/li&gt;
      &lt;li&gt;’?’ → 0 혹은 1번의 패턴이 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;반복 패턴의 경우 greedy하게 검색 ⇒ 가능한 많은 부분이 매칭되도록 작동함&lt;br /&gt;
  e.g) a[bcd]*b 패턴을 abcbdccb에서 검색하는 경우
    &lt;ul&gt;
      &lt;li&gt;ab, abcb, abcbdccb 전부 가능 하지만 최대한 많은 부분이 매칭된 abcbdccb가 검색된 패턴&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-중괄호&quot;&gt;{} (중괄호)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;*, +, ?을 사용하여 반복적인 패턴을 찾는 것이 가능하나, 반복의 횟수 제한은 불가&lt;/li&gt;
  &lt;li&gt;패턴뒤에 위치하는 중괄호{}에 숫자를 명시하면 해당 숫자 만큼의 반복인 경우에만 매칭
    &lt;ul&gt;
      &lt;li&gt;{4} - 4번 반복&lt;/li&gt;
      &lt;li&gt;{3,4} - 3 ~ 4번 반복&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;미니멈-매칭non-greedy-way&quot;&gt;미니멈 매칭(non-greedy way)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;기본적으로 *, +, ?를 사용하면 greedy(맥시멈 매칭)하게 동작함&lt;/li&gt;
  &lt;li&gt;*?, +?을 이용하여 해당 기능을 구현 → 최소한으로 매칭되는 것을 찾아줌&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;.+&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;.+?&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;lt;html&amp;gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;{}?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;{m,n} : m번 에서 n번 반복하나 greedy하게 동작&lt;/li&gt;
  &lt;li&gt;{m,n}? : non-greedy하게 동작 → 최소 m번만 매칭하면 만족&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'a{3,5}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'aaaaa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'aaaaa'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'a{3,5}?'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'aaaaa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'aaa'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;grouping&quot;&gt;grouping&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;()을 사용하여 그루핑&lt;/li&gt;
  &lt;li&gt;매칭 결과를 각 그룹별로 분리 가능&lt;/li&gt;
  &lt;li&gt;패턴 명시 할 때, 각 그룹을 괄호() 안에 넣어 분리하여 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(\w+)@(.+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test@gmail.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--------------------&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test@gmail.com'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;match-함수&quot;&gt;match 함수&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;search와 유사하지만 match는 주어진 문자열의 &lt;strong&gt;시작&lt;/strong&gt;부터 비교하여 패턴이 있는지 확인&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;search(r'^')&lt;/code&gt; 사용과 같은 기능&lt;/li&gt;
  &lt;li&gt;시작부터 해당 패턴이 존재하지 않다면 None 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'123 is my number'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# match 함수에서는 시작부터 검색하므로 반환되는 값이 없음
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'my number is 123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c1&quot;&gt;# search 함수는 해당 패턴의 위치에 무관하게 검색을 해줌
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'my number is 123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# search 함수에 ^(틸드) 캐릭터 사용하면 match 함수와 동일한 기능
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^\d\d\d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'my number is 123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;findall-함수&quot;&gt;findall 함수&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;search가 최초로 매칭되는 패턴만 반환한다면, findall은 매칭되는 전체의 패턴을 반환&lt;/li&gt;
  &lt;li&gt;매칭되는 모든 결과를 리스트 형태로 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'[\w-]+@[\w.]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test@test.com my email address your@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'your@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;sub-함수&quot;&gt;sub 함수&lt;/h2&gt;
&lt;blockquote class=&quot;comment&quot;&gt;
  &lt;p&gt;subtract&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re.sub(pattern, replace, string, count[optional])&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;주어진 string에서 일치하는 모든 pattern을 치환(replace)&lt;/li&gt;
  &lt;li&gt;replace : 특정 문자열 또는 함수&lt;/li&gt;
  &lt;li&gt;count
    &lt;ul&gt;
      &lt;li&gt;0 : 전체 치환 (default)&lt;/li&gt;
      &lt;li&gt;1 이상 : 해당 숫자만큼 치환 됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;결과를 문자열로 다시 반환&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w-]+@[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w.]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EMAIL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test@test.com my email address your@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EMAIL my email address EMAIL'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w-]+@[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w.]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EMAIL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test@test.com my email address your@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EMAIL my email address your@test.com'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;compile-함수&quot;&gt;compile 함수&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;re.compile(pattern)&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;RegexObject.function(string)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;동일한 정규표현식을 매번 다시 쓰기 번거로움을 해결&lt;/li&gt;
  &lt;li&gt;compile로 해당표현식을 re.RegexObject 객체로 저장하여 사용가능&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;email_reg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w-]+@[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w.]+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;email_reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test@test.com my email address your@test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Match&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'test@test.com'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;정규식-예제&quot;&gt;정규식 예제&lt;/h1&gt;

&lt;h2 id=&quot;이메일-주소-추출&quot;&gt;이메일 주소 추출&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;아래 뉴스에서 이메일 주소를 추출해 보세요&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 위의 두 모듈이 없는 경우에는 pip install requests bs4 실행
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_news_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html5lib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attrs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'harmonyContainer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paragraph&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;news1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_news_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://news.v.daum.net/v/20190617073049838'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--------------------&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;로스앤젤레스&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;연합뉴스&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;옥철&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;특파원&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;팀&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;쿡&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;애플&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;최고경영자&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;가&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;일&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;현지시간&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실리콘밸리&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;앞마당&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;격인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;미국&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;서부&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;명문&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;스탠퍼드대학&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;학위수여식에서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테크기업들을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;향해&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;쓴소리를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;쏟아냈다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;쿡은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이날&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;연설에서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실리콘밸리&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테크기업들은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;자신들이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;만든&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;혼란에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;대한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;책임을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;질&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;필요가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;있다고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;경고했다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;근래&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;업계의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가장&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;큰&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;이슈인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;개인정보&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;침해&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사생활&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보호&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문제를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;콕&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집어&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;라이벌인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;구글&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;페이스북&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;등&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;공룡을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;겨냥한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;발언이라는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;해석이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;나왔다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;쿡은&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;최근 실리콘밸리 산업은 고귀한 혁신과는 점점 더 거리가 멀어지는 것으로 알려져 있다. 책임을 받아들이지 않고도 신뢰를 얻을 수 있다는 그런 믿음 말이다&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;라고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;꼬집었다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;개인정보&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;유출&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사건으로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;미&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;의회&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;청문회에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;줄줄이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;불려&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;나간&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;경쟁사&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CEO&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;들을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;향해&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;일침을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;것으로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보인다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;그는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;또&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실리콘밸리에서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;희대의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사기극을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;연출한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;바이오벤처&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;스타트업&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테라노스&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Theranos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;직격했다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;쿡은&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;피 한 방울로 거짓된 기적을 만들 수 있다고 믿었느냐&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;면서&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;이런 식으로 혼돈의 공장을 만든다면 그 책임에서 절대 벗어날 수 없다&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;라고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비난했다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;테라노스는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;손가락&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;끝을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;찔러&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;극미량의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;혈액&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;샘플만&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;있으면&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;각종&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;의학정보&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;분석은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;물론&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;거의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;모든&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;질병&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;진단이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;바이오헬스&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기술을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;개발했다고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;속여&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;월가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;큰손들로부터&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;거액의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;투자를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;유치했다가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;해당&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기술이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사기인&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;것으로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;드러나&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;청산한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기업이다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;쿡은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;애플의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;경우&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;프라이버시&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;사생활&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보호에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;초점을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;맞춘&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;새로운&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;제품&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기능들로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;경쟁사들에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;맞서고&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;있다며&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;자사의&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;보호&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;정책을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;은근히&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;홍보하기도&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;했다&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oakchul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;co&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kr&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# email 주소 추출
# email_reg = re.compile('[\w-]+@[\w.]+') # 이 패턴으로는 test@test.com.도 추출이되므로 더 디테일하게 패턴을 수정
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_reg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w-]+@[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w.]+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;email_reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;news1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'oakchul@yna.co.kr'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;웹페이지-찾기&quot;&gt;웹페이지 찾기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;다음중 올바른 (http, https) 웹페이지만 찾으시오
    &lt;ul&gt;
      &lt;li&gt;http, https&lt;/li&gt;
      &lt;li&gt;://&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;webs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.test.co.kr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;'https://www.test1.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;'http://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;'ftp://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# ftp 아님
&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;'http:://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;'htp://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# htp 아님
&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;'http://www.google.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;s&quot;&gt;'https://www.homepage.com.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 마지막 .com. 아님
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# 웹페이지 추출 (http, https)
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https?://[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+].+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.test.co.kr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.test1.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://www.google.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# 다른 방법으로 추출
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web_reg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https?://[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+].+&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w+$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;web_reg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--------------------&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.test.co.kr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'https://www.test1.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'http://www.test.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'http://www.google.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>MiKy</name></author><category term="Python" /><category term="python" /><category term="regularExpression" /><summary type="html">정규표현식 regular expression, re 특정한 패턴과 일치하는 문자열를 ‘검색’, ‘치환’, ‘제거’ 하는 기능을 지원 정규표현식의 도움없이 패턴을 찾는 작업(Rule 기반)은 불완전 하거나 작업의 cost가 높음 crawling에서도 많이 사용 eg. 이메일 형식 판별, 전화번호 형식 판별, 숫자로만 이루어진 문자열 등 raw string 문자열 앞에 r이 붙으면 해당 문자열이 구성된 그대로 문자열로 변환 정규표현식 사용 시 raw string을 이용 print('abcdef\n') # escape 문자열 print(r'abcdef\n') &amp;gt;&amp;gt; ---------------- abcdef abcdef\n search 함수 re.search(r'pattern', string, flag[optional]) re 패키지 임포트해서 search 함수 사용 첫 번째로 패턴을 찾으면 match 객체를 반환 match.start() : 시작 인덱스 match.end() : 종료 인덱스 match.group() : 그룹 정보 m = re.search(r'abc', 'abcdef') print(m) print(type(m)) print(m.start()) print(m.end()) print(m.group()) &amp;gt;&amp;gt; ---------------- &amp;lt;re.Match object; span=(0, 3), match='abc'&amp;gt; &amp;lt;class 're.Match'&amp;gt; 0 3 abc 패턴을 찾지 못하면 None 반환 m = re.search(r'abc', 'abdef') print(m) print(type(m)) &amp;gt;&amp;gt; ---------------- None &amp;lt;class 'NoneType'&amp;gt; 검색 예제 # 3자리 숫자 검색 re.search(r'\d\d\d', '123abcd456') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 3), match='123'&amp;gt; # 4자리 숫자 검색 re.search(r'\d\d\d\d', '123abcd456') &amp;gt;&amp;gt; # 3자리 숫자와 다음 1자리 문자 검색 re.search(r'\d\d\d\w', '123abcd456') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 4), match='123a'&amp;gt; # 2자리 모든 패턴과 2자리 문자 검색 re.search(r'..\w\w', '@#$#ABCDabcd') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(2, 6), match='$#AB'&amp;gt; 기본 패턴 REF re — Regular expression operations character a, X, 9 등등 문자 하나하나의 글자들은 정확히 해당 문자와 일치 eg. 패턴 test는 test 문자열과 일치하는 지를 검사 대소문자 기본적으로 대소문자 구별 구별하지 않도록 설정도 가능 예외 문자 . ^ $ * + ? { } [ ] ( ) \ | 몇몇 문자들에 대해서는 예외 존재 → 특별한 의미로 사용 . (마침표) : 어떤 한개의 character와 일치 (newline(엔터) 제외) \w : 문자 character(대소문자, 숫자) 1개와 일치 [a-zA-Z0-9_] \d : 숫자 character 1개와 일치 [0-9] \s : 공백문자와 일치 \t, \n, \r : tab, newline, return ^, $ : 각각 문자열의 시작과 끝 \ (백슬래시)가 붙으면 스페셜한 의미가 없어짐 \. : .자체를 의미 \\ : \를 의미 메타 캐릭터 (metacharacters) 특별한 의미로 사용되는 예외 문자 [ ] (대괄호) 문자들의 범위를 나타내기 위해 사용 [] 내부의 메타 캐릭터는 캐릭터 자체를 의미 → 예외문자로 처리되지 않음 pattern [나열] : or [시작-끝] : -와 함께 사용되면 해당 문자 사이의 범위에 속하는 문자 중 하나 [^패턴] : ^가 맨 앞에 사용 되는 경우 NOT처럼 적용 → 해당 문자 패턴이 아닌 것과 매칭 eg. [abck] : a or b or c or k [abc.^] : a or b or c or . or ^ [a-d] : abcd [0-9] : 모든 숫자 [a-z] : 모든 소문자 [A-Z] : 모든 대문자 [a-zA-Z0-9] : 모든 알파벳 대소문자 및 숫자 [^0-9] : 숫자가 아닌 것 \ (백슬래시) 다른 문자와 함께 사용되어 특수한 의미를 지님 \d : 숫자 → [0-9]와 동일 \D : 숫자가 아닌 문자 → [^0-9]와 동일 \s : 공백 문자(띄어쓰기, 탭, 엔터 등) \S : 공백이 아닌 문자 \w : 알파벳대소문자 숫자 → [0-9a-zA-Z]와 동일 \W : non alpha-numeric 문자 → [^0-9a-zA-Z]와 동일 메타 캐릭터가 캐릭터 자체를 표현하도록 할 경우 사용 \. , \\ . (마침표) 모든 문자를 의미 re.search(r'p.g', 'pig') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 3), match='pig'&amp;gt; ^(틸드), $(달러) ^ : 문자열의 맨 앞부터 일치하는 경우 검색. 해당 문자열로 시작 $ : 문자열의 맨 뒤부터 일치하는 경우 검색. 해당 문자열로 끝 반복패턴 패턴 뒤에 위치하는 *, +, ?는 해당 패턴이 반복적으로 존재하는지 검사 ’+’ → 1번 이상의 패턴이 발생 ‘*’ → 0번 이상의 패턴이 발생 (없는 경우도 포함) ’?’ → 0 혹은 1번의 패턴이 발생 반복 패턴의 경우 greedy하게 검색 ⇒ 가능한 많은 부분이 매칭되도록 작동함 e.g) a[bcd]*b 패턴을 abcbdccb에서 검색하는 경우 ab, abcb, abcbdccb 전부 가능 하지만 최대한 많은 부분이 매칭된 abcbdccb가 검색된 패턴 {} (중괄호) *, +, ?을 사용하여 반복적인 패턴을 찾는 것이 가능하나, 반복의 횟수 제한은 불가 패턴뒤에 위치하는 중괄호{}에 숫자를 명시하면 해당 숫자 만큼의 반복인 경우에만 매칭 {4} - 4번 반복 {3,4} - 3 ~ 4번 반복 미니멈 매칭(non-greedy way) 기본적으로 *, +, ?를 사용하면 greedy(맥시멈 매칭)하게 동작함 *?, +?을 이용하여 해당 기능을 구현 → 최소한으로 매칭되는 것을 찾아줌 re.search(r'&amp;lt;.+&amp;gt;', '&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 17), match='&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;'&amp;gt; re.search(r'&amp;lt;.+?&amp;gt;', '&amp;lt;html&amp;gt;text&amp;lt;/html&amp;gt;') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 6), match='&amp;lt;html&amp;gt;'&amp;gt; {}? {m,n} : m번 에서 n번 반복하나 greedy하게 동작 {m,n}? : non-greedy하게 동작 → 최소 m번만 매칭하면 만족 re.search(r'a{3,5}', 'aaaaa') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 5), match='aaaaa'&amp;gt; re.search(r'a{3,5}?', 'aaaaa') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 3), match='aaa'&amp;gt; grouping ()을 사용하여 그루핑 매칭 결과를 각 그룹별로 분리 가능 패턴 명시 할 때, 각 그룹을 괄호() 안에 넣어 분리하여 사용 m = re.search(r'(\w+)@(.+)', 'test@gmail.com') print(m) print(m.group(0)) print(m.group(1)) print(m.group(2)) &amp;gt;&amp;gt; -------------------- &amp;lt;re.Match object; span=(0, 14), match='test@gmail.com'&amp;gt; test@gmail.com test gmail.com match 함수 search와 유사하지만 match는 주어진 문자열의 시작부터 비교하여 패턴이 있는지 확인 search(r'^') 사용과 같은 기능 시작부터 해당 패턴이 존재하지 않다면 None 반환 re.match(r'\d\d\d', '123 is my number') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 3), match='123'&amp;gt; # match 함수에서는 시작부터 검색하므로 반환되는 값이 없음 re.match(r'\d\d\d', 'my number is 123') &amp;gt;&amp;gt; # search 함수는 해당 패턴의 위치에 무관하게 검색을 해줌 re.search(r'\d\d\d', 'my number is 123') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(13, 16), match='123'&amp;gt; # search 함수에 ^(틸드) 캐릭터 사용하면 match 함수와 동일한 기능 re.search(r'^\d\d\d', 'my number is 123') &amp;gt;&amp;gt; findall 함수 search가 최초로 매칭되는 패턴만 반환한다면, findall은 매칭되는 전체의 패턴을 반환 매칭되는 모든 결과를 리스트 형태로 반환 re.findall(r'[\w-]+@[\w.]+', 'test@test.com my email address your@test.com') &amp;gt;&amp;gt; ['test@test.com', 'your@test.com'] sub 함수 subtract re.sub(pattern, replace, string, count[optional]) 주어진 string에서 일치하는 모든 pattern을 치환(replace) replace : 특정 문자열 또는 함수 count 0 : 전체 치환 (default) 1 이상 : 해당 숫자만큼 치환 됨 결과를 문자열로 다시 반환 re.sub('[\w-]+@[\w.]+', 'EMAIL', 'test@test.com my email address your@test.com') &amp;gt;&amp;gt; 'EMAIL my email address EMAIL' re.sub('[\w-]+@[\w.]+', 'EMAIL', 'test@test.com my email address your@test.com', count=1) &amp;gt;&amp;gt; 'EMAIL my email address your@test.com' compile 함수 re.compile(pattern) RegexObject.function(string) 동일한 정규표현식을 매번 다시 쓰기 번거로움을 해결 compile로 해당표현식을 re.RegexObject 객체로 저장하여 사용가능 email_reg = re.compile('[\w-]+@[\w.]+') email_reg.search('test@test.com my email address your@test.com') &amp;gt;&amp;gt; &amp;lt;re.Match object; span=(0, 13), match='test@test.com'&amp;gt; 정규식 예제 이메일 주소 추출 아래 뉴스에서 이메일 주소를 추출해 보세요 import requests from bs4 import BeautifulSoup # 위의 두 모듈이 없는 경우에는 pip install requests bs4 실행 def get_news_content(url): response = requests.get(url) content = response.text soup = BeautifulSoup(content, 'html5lib') div = soup.find('div', attrs = {'id' : 'harmonyContainer'}) content = '' for paragraph in div.find_all('p'): content += paragraph.get_text() return content news1 = get_news_content('https://news.v.daum.net/v/20190617073049838') print(news1) &amp;gt;&amp;gt; -------------------- (로스앤젤레스=연합뉴스) 옥철 특파원 = 팀 쿡 애플 최고경영자(CEO)가 16일(현지시간) 실리콘밸리 앞마당 격인 미국 서부 명문 스탠퍼드대학 학위수여식에서 테크기업들을 향해 쓴소리를 쏟아냈다.쿡은 이날 연설에서 실리콘밸리 테크기업들은 자신들이 만든 혼란에 대한 책임을 질 필요가 있다고 경고했다.근래 IT 업계의 가장 큰 이슈인 개인정보 침해, 사생활 보호 문제를 콕 집어 라이벌인 구글, 페이스북 등 IT 공룡을 겨냥한 발언이라는 해석이 나왔다.쿡은 &quot;최근 실리콘밸리 산업은 고귀한 혁신과는 점점 더 거리가 멀어지는 것으로 알려져 있다. 책임을 받아들이지 않고도 신뢰를 얻을 수 있다는 그런 믿음 말이다&quot;라고 꼬집었다.개인정보 유출 사건으로 미 의회 청문회에 줄줄이 불려 나간 경쟁사 CEO들을 향해 일침을 가한 것으로 보인다.그는 또 실리콘밸리에서 희대의 사기극을 연출한 바이오벤처 스타트업 테라노스(Theranos)를 직격했다.쿡은 &quot;피 한 방울로 거짓된 기적을 만들 수 있다고 믿었느냐&quot;면서 &quot;이런 식으로 혼돈의 공장을 만든다면 그 책임에서 절대 벗어날 수 없다&quot;라고 비난했다.테라노스는 손가락 끝을 찔러 극미량의 혈액 샘플만 있으면 각종 의학정보 분석은 물론 거의 모든 질병 진단이 가능한 바이오헬스 기술을 개발했다고 속여 월가 큰손들로부터 거액의 투자를 유치했다가 해당 기술이 사기인 것으로 드러나 청산한 기업이다.쿡은 애플의 경우 프라이버시(사생활) 보호에 초점을 맞춘 새로운 제품 기능들로 경쟁사들에 맞서고 있다며 자사의 데이터 보호 정책을 은근히 홍보하기도 했다.oakchul@yna.co.kr # email 주소 추출 # email_reg = re.compile('[\w-]+@[\w.]+') # 이 패턴으로는 test@test.com.도 추출이되므로 더 디테일하게 패턴을 수정 email_reg = re.compile('[\w-]+@[\w.]+\w+') email_reg.search(news1).group() &amp;gt;&amp;gt; 'oakchul@yna.co.kr' 웹페이지 찾기 다음중 올바른 (http, https) 웹페이지만 찾으시오 http, https :// webs = ['http://www.test.co.kr', 'https://www.test1.com', 'http://www.test.com', 'ftp://www.test.com', # ftp 아님 'http:://www.test.com', 'htp://www.test.com', # htp 아님 'http://www.google.com', 'https://www.homepage.com.'] # 마지막 .com. 아님 # 웹페이지 추출 (http, https) list = [] for web in webs: if re.match('https?://[\w+].+\w+$', web): list.append(web) print(list) &amp;gt;&amp;gt; ['http://www.test.co.kr', 'https://www.test1.com', 'http://www.test.com', 'http://www.google.com'] # 다른 방법으로 추출 web_reg = re.compile('https?://[\w+].+\w+$') list(filter(lambda w:web_reg.search(w)!=None, webs)) &amp;gt;&amp;gt; -------------------- ['http://www.test.co.kr', 'https://www.test1.com', 'http://www.test.com', 'http://www.google.com']</summary></entry></feed>