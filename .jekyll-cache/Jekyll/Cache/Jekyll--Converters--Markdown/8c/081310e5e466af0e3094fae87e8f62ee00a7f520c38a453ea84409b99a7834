I"r
<h1 id="rest-api">REST API</h1>

<h2 id="api">API</h2>
<blockquote class="comment">
  <p>Application Programing Interface</p>
</blockquote>
<ul>
  <li>두 개의 시스템이 상호 작용하기 위한 인터페이스</li>
  <li>데이터를 주고 받는 인터페이스</li>
  <li>API라하면 보통 REST API를 지칭함</li>
</ul>

<h2 id="web-api">WEB API</h2>

<p><img src="/assets/images/dataengineer/APIBase/img01.png" alt="Image" width="500px" /><br />
<em>http 프로토콜을 사용하는 REST API 기반으로 구축한 웹사이트</em></p>

<h1 id="api-접근-권한">API 접근 권한</h1>

<h2 id="authentication-vs-authorization">Authentication VS Authorization</h2>
<ul>
  <li>Authentication : Identity(정체)가 맞는지 자격 증명</li>
  <li>Authorization: API를 통한 어떤 액션에 대한 권한 설정</li>
</ul>

<h2 id="api-key">API Key</h2>
<ul>
  <li>API 호출할 때 Request URL 또는 Request 헤더에 포함시키는 긴 스트링</li>
  <li>API Key가 없으면 API의 사용이 불가능</li>
</ul>

<ol>
  <li>URL 방식
    <ul>
      <li>Request URL에 Key String을 포함시켜 호출</li>
      <li>eg. 구글맵 → https://maps.googleapis.com/maps/api/directions/json?origin=Disneyland&amp;destination=Universal+Studios +Hollywood&amp;key=<strong class="font-blue">YOUR_API_KEY</strong></li>
    </ul>
  </li>
  <li>Header 방식 : BasicAuth
    <ul>
      <li>username:password와 같은 credential을 base64로 인코딩해서 Request Header에 포함시켜 호출</li>
    </ul>
  </li>
</ol>

<h2 id="oauth-20">OAuth 2.0</h2>
<ul>
  <li>페이스북이나 구글 계정으로 인증하는 방식 등의 경우</li>
</ul>

<pre><code class="language-mermaid">graph LR
    A--&gt;B
    B--&gt;A
    B--WEB API--&gt;C
    C--&gt;B
    subgraph SERVER
    C[Sportify]
    end
    subgraph CLIENT
    B[FaceBook&lt;br/&gt;Google&lt;br/&gt;etc]
    end
    subgraph RESOURCE
    A[End user&lt;br/&gt;data and controls]
    end
</code></pre>

<h1 id="api-구조">API 구조</h1>
<p><img src="/assets/images/dataengineer/APIBase/img02.png" alt="Image" width="340px" /></p>

<h2 id="endpoint">Endpoint</h2>
<ul>
  <li>API를 요청하는 포인트의 값</li>
  <li>Resource를 Access하는 경로/방법</li>
</ul>

<h2 id="method">Method</h2>
<ul>
  <li>자원 접근에 허용된 범위</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Method</th>
      <th style="text-align: center">Type</th>
      <th>내용</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">GET</td>
      <td style="text-align: center">SELECT</td>
      <td>해당 리소스를 조회하고 정보를 가져온다</td>
    </tr>
    <tr>
      <td style="text-align: center">HEAD</td>
      <td style="text-align: center">SELECT</td>
      <td>GET 방식과 동일. 단, 응답코드와 HEAD만 가져온다 → API 작동 여부 확인용</td>
    </tr>
    <tr>
      <td style="text-align: center">POST</td>
      <td style="text-align: center">INSERT</td>
      <td>요청된 리소스를 생성한다</td>
    </tr>
    <tr>
      <td style="text-align: center">PUT</td>
      <td style="text-align: center">UPDATE</td>
      <td>요청된 리소스를 업데이트한다</td>
    </tr>
    <tr>
      <td style="text-align: center">DELETE</td>
      <td style="text-align: center">DELETE</td>
      <td>요청된 리소스를 삭제한다</td>
    </tr>
  </tbody>
</table>

<h2 id="parameter">Parameter</h2>
<ul>
  <li>Endpoint를 통해 Request할 때 함께 전달하는 값</li>
</ul>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Type</th>
      <th>내용</th>
      <th>예</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Header</td>
      <td>주로 Authorization 관련 정보 전달</td>
      <td> </td>
    </tr>
    <tr>
      <td style="text-align: center">Path</td>
      <td>Query String(?, 물음표) 이전 Endpoint path 안에 포함되는 변수</td>
      <td>{id}</td>
    </tr>
    <tr>
      <td style="text-align: center">Query String</td>
      <td>Query String(?, 물음표) 이후 포함되는 변수</td>
      <td>?country=SE&amp;city=seoul</td>
    </tr>
    <tr>
      <td style="text-align: center">Request Body</td>
      <td>주로 JSON 형태로 전달되며 POST method에 주로 사용</td>
      <td>{cuntry:’SE’, city:’seoul’}</td>
    </tr>
  </tbody>
</table>

<h1 id="spotify-api">Spotify API</h1>
<blockquote>
  <p><strong>REF</strong> <a href="https://developer.spotify.com/documentation/web-api/" target="_blank">Spotify Web API</a></p>
</blockquote>

<h2 id="api-doc">API Doc</h2>
<ul>
  <li>Rate Limiting</li>
  <li>Response Status Code</li>
  <li>API ENDPOINT REFERENCE
    <ul>
      <li>세부 API 정보 확인 가능</li>
      <li>eg. get an artist, get an artist’s top tracks, etc<br />
<img src="/assets/images/dataengineer/APIBase/img03.png" alt="Image" class="border" width="400px" /></li>
    </ul>
  </li>
</ul>

<h2 id="client-credentials-flow">Client Credentials Flow</h2>
<blockquote>
  <p><strong>REF</strong> <a href="https://developer.spotify.com/documentation/general/guides/authorization-guide/" target="_blank">Authorization Guide</a> : OAuth가 아니므로 Web API 부분 참고</p>
</blockquote>

<ul>
  <li>You do : Login with your Client ID and Secret Key.</li>
  <li>You get : Access token.</li>
</ul>

<p><img src="/assets/images/dataengineer/APIBase/img04.png" alt="Image" width="500px" /><br />
<em>Client Credentials Flow</em></p>

<h2 id="token-발급">Token 발급</h2>

<p><img src="/assets/images/dataengineer/APIBase/img05.png" alt="Image" width="500px" /></p>

<ul>
  <li>Dashboard &gt; CREATE AN APP으로 신규 앱 생성</li>
</ul>

<p><img src="/assets/images/dataengineer/APIBase/img06.png" alt="Image" width="500px" /></p>

<blockquote>
  <p><strong>REF</strong><br />
패스트캠퍼스 - 데이터 엔지니어 강의 / 한승수 강사</p>
</blockquote>
:ET