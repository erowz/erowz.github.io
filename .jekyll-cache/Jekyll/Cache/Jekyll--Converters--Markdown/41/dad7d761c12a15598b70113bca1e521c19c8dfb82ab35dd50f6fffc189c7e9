I"?
<h1 id="정규표현식">정규표현식</h1>
<blockquote class="comment">
  <p>regular expression, re</p>
</blockquote>

<ul>
  <li>특정한 패턴과 일치하는 문자열를 ‘검색’, ‘치환’, ‘제거’ 하는 기능을 지원</li>
  <li>정규표현식의 도움없이 패턴을 찾는 작업(Rule 기반)은 불완전 하거나 작업의 cost가 높음</li>
  <li>crawling에서도 많이 사용</li>
  <li>eg. 이메일 형식 판별, 전화번호 형식 판별, 숫자로만 이루어진 문자열 등</li>
</ul>

<h3 id="raw-string">raw string</h3>
<ul>
  <li>문자열 앞에 r이 붙으면 해당 문자열이 구성된 그대로 문자열로 변환</li>
  <li>정규표현식 사용 시 raw string을 이용</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'abcdef</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>  <span class="c1"># escape 문자열
</span><span class="k">print</span><span class="p">(</span><span class="s">r'abcdef\n'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">-----------------</span>
<span class="n">abcdef</span>

<span class="n">abcdef</span>\<span class="n">n</span>
</code></pre></div></div>
<p>​</p>
<h2 id="기본-패턴">기본 패턴</h2>

<blockquote>
  <p><strong>REF</strong> <a href="https://docs.python.org/3/library/re.html" target="_blank">re — Regular expression operations</a></p>
</blockquote>

<ul>
  <li><strong>character</strong>
    <ul>
      <li>a, X, 9 등등 문자 하나하나의 글자들은 정확히 해당 문자와 일치</li>
      <li>eg. 패턴 test는 test 문자열과 일치하는 지를 검사</li>
    </ul>
  </li>
  <li><strong>대소문자</strong>
    <ul>
      <li>기본적으로 대소문자 구별</li>
      <li>구별하지 않도록 설정 가능</li>
    </ul>
  </li>
  <li><strong>예외 문자</strong>
    <ul>
      <li>몇몇 문자들에 대해서는 예외가 존재하는데, 이들은 틀별한 의미로 사용 됨
. ^ $ * + ? { } [ ] \ | ( )
. (마침표) - 어떤 한개의 character와 일치 (newline(엔터) 제외)</li>
    </ul>
  </li>
</ul>

<p>\w - 문자 character와 일치 [a-zA-Z0-9_]</p>

<p>\s - 공백문자와 일치</p>

<p>\t, \n, \r - tab, newline, return</p>

<p>\d - 숫자 character와 일치 [0-9]</p>

<p>^ = 시작, $ = 끝 각각 문자열의 시작과 끝을 의미</p>

<p>\가 붙으면 스페셜한 의미가 없어짐. 예를들어 .는 .자체를 의미 \는 \를 의미</p>
:ET