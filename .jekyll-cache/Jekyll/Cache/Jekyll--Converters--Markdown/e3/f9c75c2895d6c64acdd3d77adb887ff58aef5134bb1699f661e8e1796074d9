I")e<h1 id="정규표현식">정규표현식</h1>
<blockquote class="comment">
  <p>regular expression, re</p>
</blockquote>

<ul>
  <li>특정한 패턴과 일치하는 문자열를 ‘검색’, ‘치환’, ‘제거’ 하는 기능을 지원</li>
  <li>정규표현식의 도움없이 패턴을 찾는 작업(Rule 기반)은 불완전 하거나 작업의 cost가 높음</li>
  <li>crawling에서도 많이 사용</li>
  <li>eg. 이메일 형식 판별, 전화번호 형식 판별, 숫자로만 이루어진 문자열 등</li>
</ul>

<h3 id="raw-string">raw string</h3>
<ul>
  <li>문자열 앞에 r이 붙으면 해당 문자열이 구성된 그대로 문자열로 변환</li>
  <li>정규표현식 사용 시 raw string을 이용</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">'abcdef</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>  <span class="c1"># escape 문자열
</span><span class="k">print</span><span class="p">(</span><span class="s">r'abcdef\n'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">----------------</span>
<span class="n">abcdef</span>

<span class="n">abcdef</span>\<span class="n">n</span>
</code></pre></div></div>

<h2 id="search-함수">search 함수</h2>
<p><code class="highlighter-rouge">re.search(r'pattern', string, flag[optional])</code></p>
<ul>
  <li><code class="highlighter-rouge">re</code> 패키지 임포트해서 <code class="highlighter-rouge">search</code> 함수 사용</li>
  <li>첫 번째로 패턴을 찾으면 match 객체를 반환
    <ul>
      <li>match.start() : 시작 인덱스</li>
      <li>match.end() : 종료 인덱스</li>
      <li>match.group() : 그룹 정보</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'abc'</span><span class="p">,</span> <span class="s">'abcdef'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">m</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">start</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">end</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">())</span>
<span class="o">&gt;&gt;</span> <span class="o">----------------</span>
<span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'abc'</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">re</span><span class="o">.</span><span class="n">Match</span><span class="s">'&gt;</span><span class="err">
</span><span class="s">0</span><span class="err">
</span><span class="s">3</span><span class="err">
</span><span class="s">abc</span><span class="err">
</span></code></pre></div></div>

<ul>
  <li>패턴을 찾지 못하면 None 반환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'abc'</span><span class="p">,</span> <span class="s">'abdef'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">(</span><span class="n">m</span><span class="p">))</span>
<span class="o">&gt;&gt;</span> <span class="o">----------------</span>
<span class="bp">None</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">NoneType</span><span class="s">'&gt;</span><span class="err">
</span></code></pre></div></div>

<ul>
  <li>검색 예제</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 3자리 숫자 검색
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'\d\d\d'</span><span class="p">,</span> <span class="s">'123abcd456'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'123'</span><span class="o">&gt;</span>

<span class="c1"># 4자리 숫자 검색
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'\d\d\d\d'</span><span class="p">,</span> <span class="s">'123abcd456'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> 

<span class="c1"># 3자리 숫자와 다음 1자리 문자 검색
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'\d\d\d\w'</span><span class="p">,</span> <span class="s">'123abcd456'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'123a'</span><span class="o">&gt;</span>

<span class="c1"># 2자리 모든 패턴과 2자리 문자 검색
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'..\w\w'</span><span class="p">,</span> <span class="s">'@#$#ABCDabcd'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'$#AB'</span><span class="o">&gt;</span>
</code></pre></div></div>

<h2 id="기본-패턴">기본 패턴</h2>

<blockquote>
  <p><strong>REF</strong> <a href="https://docs.python.org/3/library/re.html" target="_blank">re — Regular expression operations</a></p>
</blockquote>

<ul>
  <li><strong>character</strong>
    <ul>
      <li>a, X, 9 등등 문자 하나하나의 글자들은 정확히 해당 문자와 일치</li>
      <li>eg. 패턴 test는 test 문자열과 일치하는 지를 검사</li>
    </ul>
  </li>
  <li><strong>대소문자</strong>
    <ul>
      <li>기본적으로 대소문자 구별</li>
      <li>구별하지 않도록 설정도 가능</li>
    </ul>
  </li>
  <li><strong>예외 문자</strong>
    <ul>
      <li>. ^ $ * + ? { } [ ] ( ) \ |</li>
      <li>몇몇 문자들에 대해서는 예외 존재 → 특별한 의미로 사용</li>
    </ul>
  </li>
  <li><strong>. (마침표)</strong> : 어떤 한개의 character와 일치 (newline(엔터) 제외)</li>
  <li><strong>\w</strong> : 문자 character(대소문자, 숫자) 1개와 일치 [a-zA-Z0-9_]</li>
  <li><strong>\d</strong> : 숫자 character 1개와 일치 [0-9]</li>
  <li><strong>\s</strong> : 공백문자와 일치</li>
  <li><strong>\t, \n, \r</strong> : tab, newline, return</li>
  <li><strong>^, $</strong> : 각각 문자열의 시작과 끝</li>
  <li><strong>\ (백슬래시)</strong>가 붙으면 스페셜한 의미가 없어짐
    <ul>
      <li><strong>\.</strong> : .자체를 의미</li>
      <li><strong>\\</strong> : \를 의미</li>
    </ul>
  </li>
</ul>

<h2 id="메타-캐릭터-metacharacters">메타 캐릭터 (metacharacters)</h2>
<ul>
  <li>특별한 의미로 사용되는 예외 문자</li>
</ul>

<h3 id="--대괄호">[ ] (대괄호)</h3>
<ul>
  <li>문자들의 범위를 나타내기 위해 사용</li>
  <li>[] 내부의 메타 캐릭터는 캐릭터 자체를 의미 → 예외문자로 처리되지 않음</li>
  <li>pattern
    <ul>
      <li>[나열] : or</li>
      <li>[시작-끝] : <strong>-</strong>와 함께 사용되면 해당 문자 사이의 범위에 속하는 문자 중 하나</li>
      <li>[^패턴] : ^가 맨 앞에 사용 되는 경우 NOT처럼 적용 → 해당 문자 패턴이 아닌 것과 매칭</li>
    </ul>
  </li>
  <li>eg.
    <ul>
      <li>[abck] : a or b or c or k</li>
      <li>[abc.^] : a or b or c or . or ^</li>
      <li>[a-d] : abcd</li>
      <li>[0-9] : 모든 숫자</li>
      <li>[a-z] : 모든 소문자</li>
      <li>[A-Z] : 모든 대문자</li>
      <li>[a-zA-Z0-9] : 모든 알파벳 대소문자 및 숫자</li>
      <li>[^0-9] : 숫자가 아닌 것</li>
    </ul>
  </li>
</ul>

<h3 id="-백슬래시">\ (백슬래시)</h3>
<ol>
  <li>다른 문자와 함께 사용되어 특수한 의미를 지님
    <ul>
      <li>\d : 숫자 → [0-9]와 동일</li>
      <li>\D : 숫자가 아닌 문자 → [^0-9]와 동일</li>
      <li>\s : 공백 문자(띄어쓰기, 탭, 엔터 등)</li>
      <li>\S : 공백이 아닌 문자</li>
      <li>\w : 알파벳대소문자 숫자 → [0-9a-zA-Z]와 동일</li>
      <li>\W : non alpha-numeric 문자 → [^0-9a-zA-Z]와 동일</li>
    </ul>
  </li>
  <li>메타 캐릭터가 캐릭터 자체를 표현하도록 할 경우 사용
    <ul>
      <li>\. , \\</li>
    </ul>
  </li>
</ol>

<h3 id="-마침표">. (마침표)</h3>
<ul>
  <li>모든 문자를 의미</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'p.g'</span><span class="p">,</span> <span class="s">'pig'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'pig'</span><span class="o">&gt;</span>
</code></pre></div></div>

<h3 id="틸드-달러">^(틸드), $(달러)</h3>
<ul>
  <li>^ : 문자열의 맨 앞부터 일치하는 경우 검색. 해당 문자열로 시작</li>
  <li>$ : 문자열의 맨 뒤부터 일치하는 경우 검색. 해당 문자열로 끝</li>
</ul>

<h3 id="반복패턴">반복패턴</h3>
<ul>
  <li>패턴 뒤에 위치하는 *, +, ?는 해당 패턴이 반복적으로 존재하는지 검사
    <ul>
      <li>’+’ → 1번 이상의 패턴이 발생</li>
      <li>‘*’ → 0번 이상의 패턴이 발생 (없는 경우도 포함)</li>
      <li>’?’ → 0 혹은 1번의 패턴이 발생</li>
    </ul>
  </li>
  <li>반복 패턴의 경우 greedy하게 검색 ⇒ 가능한 많은 부분이 매칭되도록 작동함<br />
  e.g) a[bcd]*b 패턴을 abcbdccb에서 검색하는 경우
    <ul>
      <li>ab, abcb, abcbdccb 전부 가능 하지만 최대한 많은 부분이 매칭된 abcbdccb가 검색된 패턴</li>
    </ul>
  </li>
</ul>

<h3 id="-중괄호">{} (중괄호)</h3>
<ul>
  <li>*, +, ?을 사용하여 반복적인 패턴을 찾는 것이 가능하나, 반복의 횟수 제한은 불가</li>
  <li>패턴뒤에 위치하는 중괄호{}에 숫자를 명시하면 해당 숫자 만큼의 반복인 경우에만 매칭
    <ul>
      <li>{4} - 4번 반복</li>
      <li>{3,4} - 3 ~ 4번 반복</li>
    </ul>
  </li>
</ul>

<h3 id="미니멈-매칭non-greedy-way">미니멈 매칭(non-greedy way)</h3>
<ul>
  <li>기본적으로 *, +, ?를 사용하면 greedy(맥시멈 매칭)하게 동작함</li>
  <li>*?, +?을 이용하여 해당 기능을 구현 → 최소한으로 매칭되는 것을 찾아줌</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'&lt;.+&gt;'</span><span class="p">,</span> <span class="s">'&lt;html&gt;text&lt;/html&gt;'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">17</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'&lt;html&gt;text&lt;/html&gt;'</span><span class="o">&gt;</span>

<span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'&lt;.+?&gt;'</span><span class="p">,</span> <span class="s">'&lt;html&gt;text&lt;/html&gt;'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'&lt;html&gt;'</span><span class="o">&gt;</span>
</code></pre></div></div>

<h3>{}?</h3>
<ul>
  <li>{m,n} : m번 에서 n번 반복하나 greedy하게 동작</li>
  <li>{m,n}? : non-greedy하게 동작 → 최소 m번만 매칭하면 만족</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'a{3,5}'</span><span class="p">,</span> <span class="s">'aaaaa'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'aaaaa'</span><span class="o">&gt;</span>

<span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'a{3,5}?'</span><span class="p">,</span> <span class="s">'aaaaa'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'aaa'</span><span class="o">&gt;</span>
</code></pre></div></div>

<h2 id="grouping">grouping</h2>
<ul>
  <li>()을 사용하여 그루핑</li>
  <li>매칭 결과를 각 그룹별로 분리 가능</li>
  <li>패턴 명시 할 때, 각 그룹을 괄호() 안에 넣어 분리하여 사용</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'(\w+)@(.+)'</span><span class="p">,</span> <span class="s">'test@gmail.com'</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">0</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">1</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
<span class="o">&gt;&gt;</span> <span class="o">--------------------</span>
<span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">14</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'test@gmail.com'</span><span class="o">&gt;</span>
<span class="n">test</span><span class="o">@</span><span class="n">gmail</span><span class="o">.</span><span class="n">com</span>
<span class="n">test</span>
<span class="n">gmail</span><span class="o">.</span><span class="n">com</span>
</code></pre></div></div>

<h2 id="match-함수">match 함수</h2>
<ul>
  <li>search와 유사하지만 match는 주어진 문자열의 <strong>시작</strong>부터 비교하여 패턴이 있는지 확인</li>
  <li><code class="highlighter-rouge">search(r'^')</code> 사용과 같은 기능</li>
  <li>시작부터 해당 패턴이 존재하지 않다면 None 반환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">r'\d\d\d'</span><span class="p">,</span> <span class="s">'123 is my number'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'123'</span><span class="o">&gt;</span>

<span class="c1"># match 함수에서는 시작부터 검색하므로 반환되는 값이 없음
</span><span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">r'\d\d\d'</span><span class="p">,</span> <span class="s">'my number is 123'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> 

<span class="c1"># search 함수는 해당 패턴의 위치에 무관하게 검색을 해줌
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'\d\d\d'</span><span class="p">,</span> <span class="s">'my number is 123'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span> <span class="mi">16</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'123'</span><span class="o">&gt;</span>

<span class="c1"># search 함수에 ^(틸드) 캐릭터 사용하면 match 함수와 동일한 기능
</span><span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">r'^\d\d\d'</span><span class="p">,</span> <span class="s">'my number is 123'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> 
</code></pre></div></div>

<h2 id="findall-함수">findall 함수</h2>
<ul>
  <li>search가 최초로 매칭되는 패턴만 반환한다면, findall은 매칭되는 전체의 패턴을 반환</li>
  <li>매칭되는 모든 결과를 리스트 형태로 반환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'[\w-]+@[\w.]+'</span><span class="p">,</span> <span class="s">'test@test.com my email address your@test.com'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="p">[</span><span class="s">'test@test.com'</span><span class="p">,</span> <span class="s">'your@test.com'</span><span class="p">]</span>
</code></pre></div></div>

<h2 id="sub-함수">sub 함수</h2>
<blockquote class="comment">
  <p>subtract</p>
</blockquote>
<p><code class="highlighter-rouge">re.sub(pattern, replace, string, count[optional])</code></p>
<ul>
  <li>주어진 string에서 일치하는 모든 pattern을 치환(replace)</li>
  <li>replace : 특정 문자열 또는 함수</li>
  <li>count
    <ul>
      <li>0 : 전체 치환 (default)</li>
      <li>1 이상 : 해당 숫자만큼 치환 됨</li>
    </ul>
  </li>
  <li>결과를 문자열로 다시 반환</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">'[</span><span class="err">\</span><span class="s">w-]+@[</span><span class="err">\</span><span class="s">w.]+'</span><span class="p">,</span> <span class="s">'EMAIL'</span><span class="p">,</span> <span class="s">'test@test.com my email address your@test.com'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="s">'EMAIL my email address EMAIL'</span>

<span class="n">re</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="s">'[</span><span class="err">\</span><span class="s">w-]+@[</span><span class="err">\</span><span class="s">w.]+'</span><span class="p">,</span> <span class="s">'EMAIL'</span><span class="p">,</span> <span class="s">'test@test.com my email address your@test.com'</span><span class="p">,</span> <span class="n">count</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="s">'EMAIL my email address your@test.com'</span>
</code></pre></div></div>

<h2 id="compile-함수">compile 함수</h2>
<p><code class="highlighter-rouge">re.compile(pattern)</code><br />
<code class="highlighter-rouge">RegexObject.function(string)</code></p>
<ul>
  <li>동일한 정규표현식을 매번 다시 쓰기 번거로움을 해결</li>
  <li>compile로 해당표현식을 re.RegexObject 객체로 저장하여 사용가능</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">email_reg</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">'[</span><span class="err">\</span><span class="s">w-]+@[</span><span class="err">\</span><span class="s">w.]+'</span><span class="p">)</span>

<span class="n">email_reg</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="s">'test@test.com my email address your@test.com'</span><span class="p">)</span>
<span class="o">&gt;&gt;</span> <span class="o">&lt;</span><span class="n">re</span><span class="o">.</span><span class="n">Match</span> <span class="nb">object</span><span class="p">;</span> <span class="n">span</span><span class="o">=</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">13</span><span class="p">),</span> <span class="n">match</span><span class="o">=</span><span class="s">'test@test.com'</span><span class="o">&gt;</span>
</code></pre></div></div>

<h1 id="정규식-예제">정규식 예제</h1>

<h2 id="이메일-주소-추출">이메일 주소 추출</h2>
<ul>
  <li>아래 뉴스에서 이메일 주소를 추출해 보세요</li>
</ul>

<h2 id="웹페이지-추출">웹페이지 추출</h2>
<ul>
  <li>다음중 올바른 (http, https) 웹페이지만 찾으시오</li>
</ul>
:ET